{
    "name": "vscode-default-keybindings",
    "displayName": "VSCode Default Keybindings",
    "description": "VSCode Default Keybindings is a keymap that enables you to load VSCode's default keybindings from another OS. Eg. use Mac keybindings on Windows.",
    "repository": {
        "type": "git",
        "url": "https://github.com/jbro/vscode-default-keybindings.git"
    },
    "bugs": {
        "url": "https://github.com/jbro/vscode-default-keybindings/issues"
    },
    "homepage": "https://github.com/jbro/vscode-default-keybindings",
    "author": {
        "name": "Jesper B. Rosenkilde"
    },
    "icon": "icon.png",
    "publisher": "jbro",
    "license": "Unlicense",
    "version": "0.2.42",
    "engines": {
        "vscode": "^1.103.2"
    },
    "categories": [
        "Keymaps"
    ],
    "keywords": [
        "keybindings",
        "keymap",
        "linux",
        "mac",
        "macos",
        "windows"
    ],
    "contributes": {
        "configuration": {
            "title": "VSCode Default Keybindings",
            "properties": {
                "vscode-default-keybindings.removeOSKeybindings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Remove OS default VSCode keybindings",
                    "order": 0
                },
                "vscode-default-keybindings.linuxKeybindings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable default Linux VSCode keybindings",
                    "order": 1
                },
                "vscode-default-keybindings.macOSKeybindings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable default MacOS default VSCode keybindings",
                    "order": 2
                },
                "vscode-default-keybindings.windowsKeybindings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable default Windows VSCode keybindings",
                    "order": 3
                }
            }
        },
        "keybindings": [
            {
                "key": "escape escape",
                "command": "-workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "ctrl+end",
                "command": "-cursorBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+end",
                "command": "-cursorBottomSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "-cursorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "-cursorDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "end",
                "command": "-cursorEnd",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "-cursorEndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "home",
                "command": "-cursorHome",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "-cursorHomeSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "-cursorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "-cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "-cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "-cursorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+home",
                "command": "-cursorTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+home",
                "command": "-cursorTopSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "-cursorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "-deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "-editor.action.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+l",
                "command": "-expandLineSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "shift+tab",
                "command": "-outdent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+z",
                "command": "-redo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+y",
                "command": "-redo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+down",
                "command": "-scrollLineDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-scrollLineUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "alt+pagedown",
                "command": "-scrollPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "alt+pageup",
                "command": "-scrollPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-tab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+z",
                "command": "-undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+down",
                "command": "-cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "-notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatShowingHint)"
            },
            {
                "key": "ctrl+enter",
                "command": "-refactorPreview.apply",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "-testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "meta+enter",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "-workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "-actions.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus || editorIsOpen)"
            },
            {
                "key": "enter",
                "command": "-breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "ctrl+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+u",
                "command": "-cursorUndo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+right",
                "command": "-cursorWordEndRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "-cursorWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+backspace",
                "command": "-deleteWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+delete",
                "command": "-deleteWordRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "-editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isInDiffEditor)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+d",
                "command": "-editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "shift+alt+[IntlBackslash]",
                "command": "-editor.action.autoFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+.",
                "command": "-editor.action.autoFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "ctrl+shift+a",
                "command": "-editor.action.blockComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+f2",
                "command": "-editor.action.changeAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+c",
                "command": "-editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+x",
                "command": "-editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+insert",
                "command": "-editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+v",
                "command": "-editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+/",
                "command": "-editor.action.commentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+alt+down",
                "command": "-editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+alt+up",
                "command": "-editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+k",
                "command": "-editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "-editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "-editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "-editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+f",
                "command": "-editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+f",
                "command": "-editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "-editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "-editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (standaloneColorPickerVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+[IntlBackslash]",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+]",
                "command": "-editor.action.indentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (standaloneColorPickerFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "-editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+f2",
                "command": "-editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "-editor.action.marker.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "-editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "-editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "-editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+f10",
                "command": "-editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+f3",
                "command": "-editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "-editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "ctrl+[",
                "command": "-editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "ctrl+shift+f10",
                "command": "-editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "-editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+alt+f10",
                "command": "-editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+shift+f3",
                "command": "-editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.action.quickFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-editor.action.refactor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "-editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+u",
                "command": "-editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "-editor.action.rename",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "ctrl+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+k ctrl+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "-editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "-editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "-editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "down",
                "command": "-editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "-editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textInputFocus)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "-editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "-editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus || editorIsOpen)"
            },
            {
                "key": "ctrl+enter",
                "command": "-editor.action.submitComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (commentEditorFocused)"
            },
            {
                "key": "ctrl+m",
                "command": "-editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+z",
                "command": "-editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+space",
                "command": "-editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "-editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "-editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "-editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "-editor.cancelOperation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cancellableOperation)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.changeDropType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (dropWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.changePasteType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (exceptionWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "-editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "-editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+[",
                "command": "-editor.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+0",
                "command": "-editor.foldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+-",
                "command": "-editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+1",
                "command": "-editor.foldLevel1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+4",
                "command": "-editor.foldLevel4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+7",
                "command": "-editor.foldLevel7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+[",
                "command": "-editor.foldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "-editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "-editor.toggleFold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+shift+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+shift+]",
                "command": "-editor.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "-editor.unfoldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+=",
                "command": "-editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+]",
                "command": "-editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "-insertSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "ctrl+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+enter",
                "command": "-mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "-notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "-notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "-notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "-notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "meta+enter",
                "command": "-notebook.cell.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "-notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "-notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-notebook.formatCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "-openReferenceToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-repl.action.filter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-repl.action.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "-repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "ctrl+shift+backspace",
                "command": "-search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "-settings.action.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "-settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor)"
            },
            {
                "key": "ctrl+/",
                "command": "-toggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k f2",
                "command": "-togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-welcome.goBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "-workbench.action.addComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeCursorHasCommentingRange)"
            },
            {
                "key": "ctrl+/",
                "command": "-workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+.",
                "command": "-workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "-workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "ctrl+right",
                "command": "-editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "-testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "-editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+c",
                "command": "-toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+l",
                "command": "-toggleFindInSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+r",
                "command": "-toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "alt+p",
                "command": "-togglePreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "-jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "-jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveEditorMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-insertBestCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "-insertNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "-insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+i",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "ctrl+enter",
                "command": "-acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "-focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "-focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (renameInputVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-workbench.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!editorTextFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+;",
                "command": "-breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+down",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+enter",
                "command": "-chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+backspace",
                "command": "-chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "-chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "-chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "-chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "-commentsClearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-commentsFocusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "ctrl+down",
                "command": "-commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+alt+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "ctrl+shift+alt+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+alt+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "-cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+right",
                "command": "-cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+alt+c",
                "command": "-debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointsFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointsFocused)"
            },
            {
                "key": "ctrl+f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!debuggersAvailable)"
            },
            {
                "key": "delete",
                "command": "-debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "delete",
                "command": "-debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "-decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "-editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "-editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "-editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "-editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "-editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+alt+f2",
                "command": "-editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+/",
                "command": "-editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "-editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (resource == 'vscode-userdata:/home/runner/work/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "insert",
                "command": "-editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+f9",
                "command": "-editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "-editor.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSubtypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSupertypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "-explorer.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "-filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "-iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "-iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "-iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "-iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "-increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "-inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "-inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+r",
                "command": "-inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "ctrl+k i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "ctrl+z",
                "command": "-inlineChat.unstash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "ctrl+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "-interactive.history.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-interactive.history.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+end",
                "command": "-interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+home",
                "command": "-interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "ctrl+c",
                "command": "-keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "ctrl+k ctrl+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+k",
                "command": "-keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "delete",
                "command": "-keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings)"
            },
            {
                "key": "alt+p",
                "command": "-keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "-list.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-list.closeFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && treeFindOpen)"
            },
            {
                "key": "left",
                "command": "-list.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "-list.collapseAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "-list.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "-list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "-list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+down",
                "command": "-list.focusAnyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "-list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "-list.focusAnyLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "-list.focusAnyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-list.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "-list.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "-list.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "-list.focusPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "-list.focusPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-list.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "-list.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "-list.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "enter",
                "command": "-list.select",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "-list.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-list.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.toggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-list.toggleSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "-noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "-noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "-noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+d",
                "command": "-notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+k m",
                "command": "-notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "-notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "-notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+k i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "-notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "ctrl+k t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "-notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "-notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-notebook.cell.delete",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "-notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.edit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "ctrl+k t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "shift+alt+meta+j",
                "command": "-notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused)"
            },
            {
                "key": "alt+meta+j",
                "command": "-notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "-notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "-notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-notebook.cell.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "ctrl+k y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "-notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "-notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "-notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "-notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "-notebook.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+end",
                "command": "-notebook.focusBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+home",
                "command": "-notebook.focusTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+[",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-notebook.format",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "-notebook.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+]",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+a",
                "command": "-notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "delete",
                "command": "-notification.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "-notification.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "-notification.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "-notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "-notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+n",
                "command": "-notifications.showList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "escape",
                "command": "-problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemsFilterFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-problems.action.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+f",
                "command": "-problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+down",
                "command": "-problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemsFilterFocus)"
            },
            {
                "key": "enter",
                "command": "-problems.action.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-problems.action.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (problemFocus)"
            },
            {
                "key": "ctrl+alt+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+down",
                "command": "-quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+down",
                "command": "-quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+up",
                "command": "-quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+up",
                "command": "-quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "-quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "-refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+alt+r",
                "command": "-revealFileInOS",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!editorFocus)"
            },
            {
                "key": "enter",
                "command": "-revealReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-scm.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "-scm.clearInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "-scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmRepository)"
            },
            {
                "key": "down",
                "command": "-scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-search.action.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "ctrl+c",
                "command": "-search.action.copyMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrMatchFocus)"
            },
            {
                "key": "ctrl+alt+c",
                "command": "-search.action.copyPath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "-search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "-search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "alt+enter",
                "command": "-search.action.openInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "enter",
                "command": "-search.action.openResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "delete",
                "command": "-search.action.remove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-search.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "-search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "-search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "-settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "-settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSettingsEditor)"
            },
            {
                "key": "ctrl+; ctrl+x",
                "command": "-testing.cancelRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+shift+a",
                "command": "-testing.coverageAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+shift+c",
                "command": "-testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+f",
                "command": "-testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+l",
                "command": "-testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+a",
                "command": "-testing.debugAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+c",
                "command": "-testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+f",
                "command": "-testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+e",
                "command": "-testing.debugFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+l",
                "command": "-testing.debugLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+m",
                "command": "-testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; e",
                "command": "-testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; l",
                "command": "-testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+r",
                "command": "-testing.refreshTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (testing.canRefresh)"
            },
            {
                "key": "ctrl+; a",
                "command": "-testing.runAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; c",
                "command": "-testing.runAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; f",
                "command": "-testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+o",
                "command": "-testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (testing.hasAnyResults)"
            },
            {
                "key": "ctrl+; ctrl+shift+i",
                "command": "-testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+; ctrl+i",
                "command": "-testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+h",
                "command": "-testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (testing.isPeekVisible)"
            },
            {
                "key": "alt+c",
                "command": "-toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (searchViewletFocus)"
            },
            {
                "key": "alt+c",
                "command": "-toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+l",
                "command": "-toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor)"
            },
            {
                "key": "alt+r",
                "command": "-toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+p",
                "command": "-toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (searchViewletFocus)"
            },
            {
                "key": "alt+r",
                "command": "-toggleSearchRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (searchViewletFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+meta+n",
                "command": "-welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+down",
                "command": "-widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "-widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "-workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "ctrl+escape",
                "command": "-workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+f9",
                "command": "-workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "-workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+shift+alt+i",
                "command": "-workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+alt+.",
                "command": "-workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+shift+f9",
                "command": "-workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "delete",
                "command": "-workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+meta+/",
                "command": "-workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "alt+meta+/",
                "command": "-workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+meta+/",
                "command": "-workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "delete",
                "command": "-workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+w",
                "command": "-workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+shift+w",
                "command": "-workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k w",
                "command": "-workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k f",
                "command": "-workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickOpen)"
            },
            {
                "key": "ctrl+k u",
                "command": "-workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+w",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+f4",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "ctrl+shift+f5",
                "command": "-workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "-workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "ctrl+f11",
                "command": "-workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "-workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "-workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "ctrl+k m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!notebookEditorFocused)"
            },
            {
                "key": "ctrl+alt+v",
                "command": "-workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (true)"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openLocalFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openLocalFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+s",
                "command": "-workbench.action.files.save",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+s",
                "command": "-workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+s",
                "command": "-workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k s",
                "command": "-workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+up",
                "command": "-workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+down",
                "command": "-workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+8",
                "command": "-workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+5",
                "command": "-workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+1",
                "command": "-workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+4",
                "command": "-workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "f6",
                "command": "-workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+f6",
                "command": "-workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+2",
                "command": "-workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+7",
                "command": "-workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+0",
                "command": "-workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+6",
                "command": "-workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+3",
                "command": "-workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+g",
                "command": "-workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "-workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "-workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (sideBySideEditorActive)"
            },
            {
                "key": "ctrl+k enter",
                "command": "-workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "-workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+0",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+pageup",
                "command": "-workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+pagedown",
                "command": "-workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+alt+1",
                "command": "-workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+alt+9",
                "command": "-workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+alt+left",
                "command": "-workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "browserback",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (canNavigateBack)"
            },
            {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (canNavigateForward)"
            },
            {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (canNavigateForward)"
            },
            {
                "key": "ctrl+k ctrl+q",
                "command": "-workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+pagedown",
                "command": "-workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+1",
                "command": "-workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+2",
                "command": "-workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+3",
                "command": "-workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+4",
                "command": "-workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+5",
                "command": "-workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+6",
                "command": "-workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+7",
                "command": "-workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+8",
                "command": "-workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "alt+9",
                "command": "-workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+s",
                "command": "-workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+,",
                "command": "-workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+h",
                "command": "-workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.panel.output.active)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!activeEditorIsPinned)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+pageup",
                "command": "-workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+shift+alt+l",
                "command": "-workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled)"
            },
            {
                "key": "ctrl+q",
                "command": "-workbench.action.quit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+alt+o",
                "command": "-workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+t",
                "command": "-workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+h",
                "command": "-workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+j",
                "command": "-workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "ctrl+k ctrl+t",
                "command": "-workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+p",
                "command": "-workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+t",
                "command": "-workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "f1",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+\\",
                "command": "-workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+b",
                "command": "-workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "ctrl+[IntlBackslash]",
                "command": "-workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "-workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+alt+f2",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f",
                "command": "-workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "-workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+g",
                "command": "-workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "-workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!terminalFocus)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+insert",
                "command": "-workbench.action.terminal.pasteSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "f2",
                "command": "-workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-workbench.action.terminal.resizePaneLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pagedown",
                "command": "-workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+end",
                "command": "-workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+end",
                "command": "-workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "shift+home",
                "command": "-workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+home",
                "command": "-workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pageup",
                "command": "-workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5C"
                }
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5D"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "ctrl+.",
                "command": "-workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "-workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!textInputFocus)"
            },
            {
                "key": "alt+c",
                "command": "-workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+r",
                "command": "-workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+w",
                "command": "-workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "-workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminal.active)"
            },
            {
                "key": "ctrl+alt+b",
                "command": "-workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "shift+alt+0",
                "command": "-workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "f11",
                "command": "-workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!isIOS)"
            },
            {
                "key": "ctrl+k ctrl+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "ctrl+j",
                "command": "-workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+b",
                "command": "-workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k z",
                "command": "-workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (activeEditorIsPinned)"
            },
            {
                "key": "ctrl+numpad_add",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+numpad_subtract",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+-",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+numpad0",
                "command": "-workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+shift+m",
                "command": "-workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.actions.workbench.panel.output.clearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (outputFilterFocus)"
            },
            {
                "key": "escape",
                "command": "-workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (bannerFocused)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.panel.repl.view.active)"
            },
            {
                "key": "ctrl+c",
                "command": "-workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "ctrl+k c",
                "command": "-workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k d",
                "command": "-workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "ctrl+k e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "-workbench.panel.chat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "-workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "-workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (statusBarFocused)"
            },
            {
                "key": "ctrl+shift+d",
                "command": "-workbench.view.debug",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.view.explorer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "ctrl+shift+x",
                "command": "-workbench.view.extensions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.scm.active)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.view.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+y",
                "command": "-chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+n",
                "command": "-chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "-notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "-terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+k down",
                "command": "-views.moveViewDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView != '')"
            },
            {
                "key": "ctrl+k left",
                "command": "-views.moveViewLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView != '')"
            },
            {
                "key": "ctrl+k right",
                "command": "-views.moveViewRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView != '')"
            },
            {
                "key": "ctrl+k up",
                "command": "-views.moveViewUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (focusedView != '')"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugRepl)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inDebugRepl)"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.openChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "-workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "f2",
                "command": "-debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (watchExpressionsFocused)"
            },
            {
                "key": "f2",
                "command": "-debug.setVariable",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "-debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (mostRecentReplEditor)"
            },
            {
                "key": "ctrl+v",
                "command": "-filesExplorer.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+alt+y",
                "command": "-chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+delete",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+e",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f4",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux"
            },
            {
                "key": "escape",
                "command": "-editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "enter",
                "command": "-explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-filesExplorer.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "ctrl+x",
                "command": "-filesExplorer.cut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "-filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "-firstCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-inlineChat2.keep",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-inlineChat2.undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "-lastCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "ctrl+shift+t",
                "command": "-mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "-moveFileToTrash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "-nextCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-previousCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "-remote.tunnel.label",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "-renameFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "-workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+alt+-",
                "command": "-workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isDevelopment)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+alt+s",
                "command": "-git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-markdown.showPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "-references-view.findReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+n",
                "command": "-git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "-references-view.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "-git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "-references-view.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "-references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "-chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isLinux && (comparingMovedCode)"
            },
            {
                "key": "escape escape",
                "command": "-workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-cursorBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+cmd+down",
                "command": "-cursorBottomSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+down",
                "command": "-cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+left",
                "command": "-cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+pagedown",
                "command": "-cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+pageup",
                "command": "-cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+right",
                "command": "-cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+up",
                "command": "-cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+n",
                "command": "-cursorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "-cursorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "-cursorDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+right",
                "command": "-cursorEnd",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "end",
                "command": "-cursorEnd",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+cmd+right",
                "command": "-cursorEndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "-cursorEndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "cmd+left",
                "command": "-cursorHome",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "home",
                "command": "-cursorHome",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+cmd+left",
                "command": "-cursorHomeSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "-cursorHomeSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+b",
                "command": "-cursorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "-cursorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+e",
                "command": "-cursorLineEnd",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-cursorLineEndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "-cursorLineStart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+a",
                "command": "-cursorLineStartSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "-cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "-cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-cursorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "-cursorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-cursorTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+cmd+up",
                "command": "-cursorTopSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+p",
                "command": "-cursorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "-cursorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+delete",
                "command": "-deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+d",
                "command": "-deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "-deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+a",
                "command": "-editor.action.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+c",
                "command": "-execCopy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+x",
                "command": "-execCut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+v",
                "command": "-execPaste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+l",
                "command": "-expandLineSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "cmd+up",
                "command": "-inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+o",
                "command": "-lineBreakInsert",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "shift+tab",
                "command": "-outdent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "shift+cmd+z",
                "command": "-redo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-scrollLineDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-scrollLineUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+pagedown",
                "command": "-scrollPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+pageup",
                "command": "-scrollPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-tab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "cmd+z",
                "command": "-undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+down",
                "command": "-cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+up",
                "command": "-notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+up",
                "command": "-notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "cmd+down",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "cmd+up",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "-notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatShowingHint)"
            },
            {
                "key": "cmd+enter",
                "command": "-refactorPreview.apply",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "-testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "-workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "cmd+f",
                "command": "-actions.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus || editorIsOpen)"
            },
            {
                "key": "cmd+e",
                "command": "-actions.findWithSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "enter",
                "command": "-breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "cmd+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "cmd+u",
                "command": "-cursorUndo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "alt+right",
                "command": "-cursorWordEndRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "-cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "alt+left",
                "command": "-cursorWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "-cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+alt+left",
                "command": "-cursorWordPartLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+left",
                "command": "-cursorWordPartLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-cursorWordPartRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+right",
                "command": "-cursorWordPartRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-deleteAllLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "cmd+delete",
                "command": "-deleteAllRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k",
                "command": "-deleteAllRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+backspace",
                "command": "-deleteWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "-deleteWordPartLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+delete",
                "command": "-deleteWordPartRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+delete",
                "command": "-deleteWordRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "-editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isInDiffEditor)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+d",
                "command": "-editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+cmd+.",
                "command": "-editor.action.autoFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+a",
                "command": "-editor.action.blockComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "cmd+f2",
                "command": "-editor.action.changeAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+c",
                "command": "-editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+x",
                "command": "-editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+v",
                "command": "-editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+/",
                "command": "-editor.action.commentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+down",
                "command": "-editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+up",
                "command": "-editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+k",
                "command": "-editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "-editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "-editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "-editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "cmd+f",
                "command": "-editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+alt+f",
                "command": "-editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "shift+alt+f",
                "command": "-editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "cmd+k cmd+f",
                "command": "-editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+down",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "-editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (stickyScrollFocused)"
            },
            {
                "key": "cmd+f12",
                "command": "-editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "-editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "cmd+up",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (standaloneColorPickerVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+,",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+]",
                "command": "-editor.action.indentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (standaloneColorPickerFocused)"
            },
            {
                "key": "alt+cmd+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "alt+cmd+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "-editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+j",
                "command": "-editor.action.joinLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+\\",
                "command": "-editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "shift+cmd+f2",
                "command": "-editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "-editor.action.marker.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "-editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "-editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+k cmd+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "-editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+f10",
                "command": "-editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditorHasCommentingRange)"
            },
            {
                "key": "cmd+k alt+cmd+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "cmd+g",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findInputFocussed)"
            },
            {
                "key": "cmd+f3",
                "command": "-editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "-editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "cmd+[",
                "command": "-editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "alt+f12",
                "command": "-editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+cmd+f12",
                "command": "-editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "-editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+alt+f10",
                "command": "-editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditorHasCommentingRange)"
            },
            {
                "key": "cmd+k alt+cmd+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+cmd+g",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findInputFocussed)"
            },
            {
                "key": "shift+cmd+f3",
                "command": "-editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "cmd+.",
                "command": "-editor.action.quickFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-editor.action.refactor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+cmd+backspace",
                "command": "-editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+k cmd+u",
                "command": "-editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "-editor.action.rename",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "cmd+f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "cmd+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "cmd+k cmd+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "-editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "-editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "-editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (stickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "shift+cmd+l",
                "command": "-editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "down",
                "command": "-editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (stickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "-editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-editor.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+cmd+right",
                "command": "-editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+cmd+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "alt+cmd+f",
                "command": "-editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus || editorIsOpen)"
            },
            {
                "key": "cmd+enter",
                "command": "-editor.action.submitComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (commentEditorFocused)"
            },
            {
                "key": "ctrl+shift+m",
                "command": "-editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+z",
                "command": "-editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+t",
                "command": "-editor.action.transposeLetters",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+space",
                "command": "-editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "cmd+i",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "alt+escape",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "-editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "cmd+f",
                "command": "-editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "-editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "-editor.cancelOperation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cancellableOperation)"
            },
            {
                "key": "cmd+.",
                "command": "-editor.changeDropType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (dropWidgetVisible)"
            },
            {
                "key": "cmd+.",
                "command": "-editor.changePasteType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (pasteWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (exceptionWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "-editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "-editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "alt+cmd+[",
                "command": "-editor.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+0",
                "command": "-editor.foldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+/",
                "command": "-editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+-",
                "command": "-editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+1",
                "command": "-editor.foldLevel1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+2",
                "command": "-editor.foldLevel2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+3",
                "command": "-editor.foldLevel3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+4",
                "command": "-editor.foldLevel4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+5",
                "command": "-editor.foldLevel5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+6",
                "command": "-editor.foldLevel6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+7",
                "command": "-editor.foldLevel7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+[",
                "command": "-editor.foldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "-editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (pasteWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+l",
                "command": "-editor.toggleFold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k shift+cmd+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "alt+cmd+]",
                "command": "-editor.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+j",
                "command": "-editor.unfoldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+=",
                "command": "-editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+]",
                "command": "-editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "-insertSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "cmd+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "cmd+enter",
                "command": "-mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "-notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "-notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "-notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "-notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "-notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "-notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+cmd+v",
                "command": "-notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "shift+alt+f",
                "command": "-notebook.formatCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "-openReferenceToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "cmd+f",
                "command": "-repl.action.filter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "alt+cmd+f",
                "command": "-repl.action.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "cmd+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "-repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "cmd+down",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "shift+cmd+r",
                "command": "-rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "shift+cmd+backspace",
                "command": "-search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+f",
                "command": "-settings.action.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor)"
            },
            {
                "key": "cmd+i",
                "command": "-settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor)"
            },
            {
                "key": "cmd+/",
                "command": "-toggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible)"
            },
            {
                "key": "cmd+k f2",
                "command": "-togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-welcome.goBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "-workbench.action.addComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeCursorHasCommentingRange)"
            },
            {
                "key": "cmd+/",
                "command": "-workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "cmd+.",
                "command": "-workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChatInput)"
            },
            {
                "key": "cmd+enter",
                "command": "-workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "-workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "cmd+right",
                "command": "-editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "-testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "-editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "-editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "shift+cmd+1",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "-editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+cmd+l",
                "command": "-toggleFindInSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+cmd+r",
                "command": "-toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "-toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "alt+cmd+p",
                "command": "-togglePreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "-jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "-jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveEditorMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "ctrl+n",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "ctrl+p",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "cmd+i",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-insertBestCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "-insertNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "-insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "cmd+pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+n",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+p",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+i",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "cmd+enter",
                "command": "-acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "-focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "-focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (renameInputVisible)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-workbench.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorTextFocus)"
            },
            {
                "key": "shift+cmd+l",
                "command": "-addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+;",
                "command": "-breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "-breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "alt+right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "alt+left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "-breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "-breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "cmd+down",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "cmd+c",
                "command": "-chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatAttachmentResource)"
            },
            {
                "key": "cmd+enter",
                "command": "-chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "cmd+backspace",
                "command": "-chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "-chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "-chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "-chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "-commentsClearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (commentsFilterFocus)"
            },
            {
                "key": "cmd+f",
                "command": "-commentsFocusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "cmd+down",
                "command": "-commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (commentsFilterFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorFocus)"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "shift+alt+cmd+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorFocus)"
            },
            {
                "key": "cmd+k shift+alt+cmd+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus)"
            },
            {
                "key": "cmd+left",
                "command": "-cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "shift+cmd+left",
                "command": "-cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "cmd+right",
                "command": "-cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "shift+cmd+right",
                "command": "-cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "alt+cmd+c",
                "command": "-debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointsFocused)"
            },
            {
                "key": "cmd+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointsFocused)"
            },
            {
                "key": "cmd+f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!debuggersAvailable)"
            },
            {
                "key": "cmd+backspace",
                "command": "-debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "cmd+backspace",
                "command": "-debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "-decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "-editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "-editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "-editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "-editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+/",
                "command": "-editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "-editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "-editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "-editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "-editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (resource == 'vscode-userdata:/Users/runner/work/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "alt+cmd+o",
                "command": "-editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+f9",
                "command": "-editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "-editor.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSubtypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSupertypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "-explorer.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "-filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "-iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "-iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "-iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "-iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "-increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "cmd+i",
                "command": "-inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "-inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "-inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+r",
                "command": "-inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+i",
                "command": "-inlineChat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "cmd+k i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "cmd+z",
                "command": "-inlineChat.unstash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "cmd+down",
                "command": "-inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+i",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "cmd+i",
                "command": "-inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "cmd+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "-interactive.history.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-interactive.history.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "cmd+down",
                "command": "-interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "cmd+up",
                "command": "-interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "cmd+c",
                "command": "-keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "cmd+k cmd+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+cmd+k",
                "command": "-keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "-keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "cmd+f",
                "command": "-keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings)"
            },
            {
                "key": "alt+cmd+p",
                "command": "-keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "-list.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-list.closeFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && treeFindOpen)"
            },
            {
                "key": "cmd+up",
                "command": "-list.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "left",
                "command": "-list.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+cmd+up",
                "command": "-list.collapseAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+left",
                "command": "-list.collapseAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "-list.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "-list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "-list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+cmd+f",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+n",
                "command": "-list.focusAnyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+down",
                "command": "-list.focusAnyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "-list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "-list.focusAnyLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+alt+p",
                "command": "-list.focusAnyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "-list.focusAnyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+n",
                "command": "-list.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-list.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "-list.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "-list.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "-list.focusPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "-list.focusPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+p",
                "command": "-list.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-list.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+down",
                "command": "-list.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "cmd+up",
                "command": "-list.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "cmd+down",
                "command": "-list.select",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-list.select",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+a",
                "command": "-list.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-list.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.toggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-list.toggleSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "-noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "-noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "-noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+d",
                "command": "-notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+k m",
                "command": "-notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "-notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "-notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "cmd+up",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "cmd+up",
                "command": "-notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "cmd+k i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "-notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "cmd+k t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "-notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "-notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-notebook.cell.delete",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "-notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.edit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "cmd+k t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "-notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "-notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "ctrl+shift+alt+j",
                "command": "-notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+alt+j",
                "command": "-notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "-notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "-notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+.",
                "command": "-notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-notebook.cell.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "cmd+k y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "-notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused)"
            },
            {
                "key": "cmd+/",
                "command": "-notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "-notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "-notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "cmd+f",
                "command": "-notebook.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+end",
                "command": "-notebook.focusBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-notebook.focusBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "cmd+home",
                "command": "-notebook.focusTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-notebook.focusTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "left",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "alt+cmd+[",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+alt+f",
                "command": "-notebook.format",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "-notebook.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "shift+cmd+l",
                "command": "-notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "alt+cmd+]",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+cmd+a",
                "command": "-notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "-notification.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "-notification.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "-notification.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "-notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "-notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "cmd+k shift+cmd+n",
                "command": "-notifications.showList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "escape",
                "command": "-problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemsFilterFocus)"
            },
            {
                "key": "cmd+c",
                "command": "-problems.action.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "cmd+f",
                "command": "-problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "cmd+down",
                "command": "-problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemsFilterFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-problems.action.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemFocus)"
            },
            {
                "key": "enter",
                "command": "-problems.action.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-problems.action.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemFocus)"
            },
            {
                "key": "cmd+.",
                "command": "-problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (problemFocus)"
            },
            {
                "key": "ctrl+alt+cmd+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+down",
                "command": "-quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "-quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+down",
                "command": "-quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+down",
                "command": "-quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+up",
                "command": "-quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "-quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+up",
                "command": "-quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+up",
                "command": "-quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "-quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "-refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+cmd+r",
                "command": "-revealFileInOS",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-revealReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-revealReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "alt+cmd+s",
                "command": "-saveAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+enter",
                "command": "-scm.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "-scm.clearInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "-scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmRepository)"
            },
            {
                "key": "down",
                "command": "-scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-search.action.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "cmd+c",
                "command": "-search.action.copyMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-search.action.copyPath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "-search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "-search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "cmd+up",
                "command": "-search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "-search.action.openInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-search.action.openResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "enter",
                "command": "-search.action.openResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "-search.action.remove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "-search.action.replace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "-search.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "-search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+i",
                "command": "-search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+up",
                "command": "-search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "shift+cmd+l",
                "command": "-selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "-settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "-settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSettingsEditor)"
            },
            {
                "key": "cmd+; cmd+x",
                "command": "-testing.cancelRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; shift+cmd+a",
                "command": "-testing.coverageAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; shift+cmd+c",
                "command": "-testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; shift+cmd+f",
                "command": "-testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; shift+cmd+l",
                "command": "-testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+a",
                "command": "-testing.debugAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+c",
                "command": "-testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+f",
                "command": "-testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+e",
                "command": "-testing.debugFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+l",
                "command": "-testing.debugLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+m",
                "command": "-testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; e",
                "command": "-testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; l",
                "command": "-testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+r",
                "command": "-testing.refreshTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (testing.canRefresh)"
            },
            {
                "key": "cmd+; a",
                "command": "-testing.runAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; c",
                "command": "-testing.runAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; f",
                "command": "-testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+o",
                "command": "-testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (testing.hasAnyResults)"
            },
            {
                "key": "cmd+; shift+cmd+i",
                "command": "-testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+; cmd+i",
                "command": "-testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+h",
                "command": "-testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (testing.isPeekVisible)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (searchViewletFocus && !fileMatchOrFolderMatchFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+l",
                "command": "-toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor)"
            },
            {
                "key": "alt+cmd+r",
                "command": "-toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "-toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+p",
                "command": "-toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (searchViewletFocus)"
            },
            {
                "key": "alt+cmd+r",
                "command": "-toggleSearchRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (searchViewletFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "-toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+cmd+n",
                "command": "-welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+down",
                "command": "-widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "cmd+up",
                "command": "-widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "alt+cmd+/",
                "command": "-workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "cmd+escape",
                "command": "-workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && !textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "cmd+i",
                "command": "-workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "-workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+f9",
                "command": "-workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+cmd+i",
                "command": "-workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "shift+cmd+i",
                "command": "-workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "alt+cmd+.",
                "command": "-workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "-workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "shift+cmd+f9",
                "command": "-workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+backspace",
                "command": "-workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+cmd+/",
                "command": "-workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "-workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "ctrl+alt+/",
                "command": "-workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "shift+cmd+enter",
                "command": "-workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "cmd+i",
                "command": "-workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "cmd+i",
                "command": "-workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "cmd+backspace",
                "command": "-workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inChat && !textInputFocus)"
            },
            {
                "key": "cmd+w",
                "command": "-workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+w",
                "command": "-workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k shift+cmd+w",
                "command": "-workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k w",
                "command": "-workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k f",
                "command": "-workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "cmd+w",
                "command": "-workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "alt+cmd+t",
                "command": "-workbench.action.closeOtherEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen)"
            },
            {
                "key": "cmd+k u",
                "command": "-workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+w",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+w",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!editorIsOpen && !multipleEditorGroups)"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textCompareEditorVisible)"
            },
            {
                "key": "cmd+k shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (textCompareEditorVisible)"
            },
            {
                "key": "cmd+k o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "shift+cmd+f5",
                "command": "-workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "-workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "cmd+f11",
                "command": "-workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "-workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "-workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "cmd+k m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!notebookEditorFocused)"
            },
            {
                "key": "alt+cmd+v",
                "command": "-workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "cmd+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+n",
                "command": "-workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+o",
                "command": "-workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (false)"
            },
            {
                "key": "cmd+o",
                "command": "-workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "cmd+o",
                "command": "-workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "cmd+o",
                "command": "-workbench.action.files.openLocalFileFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (remoteFileDialogVisible)"
            },
            {
                "key": "cmd+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+s",
                "command": "-workbench.action.files.save",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+s",
                "command": "-workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+s",
                "command": "-workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (remoteFileDialogVisible)"
            },
            {
                "key": "cmd+k s",
                "command": "-workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+f",
                "command": "-workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+up",
                "command": "-workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+down",
                "command": "-workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+8",
                "command": "-workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+5",
                "command": "-workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+1",
                "command": "-workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+4",
                "command": "-workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+left",
                "command": "-workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "f6",
                "command": "-workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+f6",
                "command": "-workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+right",
                "command": "-workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+2",
                "command": "-workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+7",
                "command": "-workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+0",
                "command": "-workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+6",
                "command": "-workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+3",
                "command": "-workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+g",
                "command": "-workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+o",
                "command": "-workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "-workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "-workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (sideBySideEditorActive)"
            },
            {
                "key": "cmd+k enter",
                "command": "-workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+r",
                "command": "-workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+9",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+0",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k shift+cmd+left",
                "command": "-workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k shift+cmd+right",
                "command": "-workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+cmd+1",
                "command": "-workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+cmd+9",
                "command": "-workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "-workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+cmd+left",
                "command": "-workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "browserback",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (canNavigateBack)"
            },
            {
                "key": "ctrl+-",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (canNavigateForward)"
            },
            {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (canNavigateForward)"
            },
            {
                "key": "cmd+k cmd+q",
                "command": "-workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+n",
                "command": "-workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+]",
                "command": "-workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+cmd+right",
                "command": "-workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k alt+cmd+right",
                "command": "-workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+1",
                "command": "-workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+2",
                "command": "-workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+3",
                "command": "-workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+4",
                "command": "-workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+5",
                "command": "-workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+6",
                "command": "-workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+7",
                "command": "-workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+8",
                "command": "-workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+9",
                "command": "-workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+s",
                "command": "-workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+,",
                "command": "-workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+u",
                "command": "-workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.panel.output.active)"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!activeEditorIsPinned)"
            },
            {
                "key": "shift+cmd+[",
                "command": "-workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+cmd+left",
                "command": "-workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k alt+cmd+left",
                "command": "-workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+p",
                "command": "-workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+q",
                "command": "-workbench.action.quickOpenView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+alt+cmd+l",
                "command": "-workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled)"
            },
            {
                "key": "cmd+q",
                "command": "-workbench.action.quit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+cmd+o",
                "command": "-workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+t",
                "command": "-workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+h",
                "command": "-workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+j",
                "command": "-workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "cmd+k cmd+t",
                "command": "-workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+cmd+tab",
                "command": "-workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+t",
                "command": "-workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "f1",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+p",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+\\",
                "command": "-workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "-workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.switchWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+b",
                "command": "-workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "cmd+r",
                "command": "-workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "cmd+enter",
                "command": "-workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "cmd+enter",
                "command": "-workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "shift+cmd+,",
                "command": "-workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+c",
                "command": "-workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "cmd+g",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+g",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "cmd+down",
                "command": "-workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "cmd+up",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "alt+f2",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "cmd+f",
                "command": "-workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "shift+cmd+]",
                "command": "-workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "shift+cmd+[",
                "command": "-workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "shift+cmd+\\",
                "command": "-workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+g",
                "command": "-workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "-workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+w",
                "command": "-workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "shift+cmd+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!terminalFocus)"
            },
            {
                "key": "cmd+v",
                "command": "-workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "-workbench.action.terminal.resizePaneDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+left",
                "command": "-workbench.action.terminal.resizePaneLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "-workbench.action.terminal.resizePaneRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "-workbench.action.terminal.resizePaneUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "cmd+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "-workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+end",
                "command": "-workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+end",
                "command": "-workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "cmd+down",
                "command": "-workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "cmd+up",
                "command": "-workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "cmd+home",
                "command": "-workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+home",
                "command": "-workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "-workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+a",
                "command": "-workbench.action.terminal.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+down",
                "command": "-workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+up",
                "command": "-workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "shift+cmd+right",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~d"
                }
            },
            {
                "key": "shift+cmd+left",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[1;2H"
                }
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001bf"
                }
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001bb"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "alt+backspace",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "alt+delete",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "cmd+backspace",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0015"
                }
            },
            {
                "key": "cmd+left",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0001"
                }
            },
            {
                "key": "cmd+right",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0005"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "cmd+.",
                "command": "-workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "-workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "cmd+\\",
                "command": "-workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+\\",
                "command": "-workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!textInputFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "-workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+cmd+r",
                "command": "-workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+cmd+w",
                "command": "-workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "-workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminal.active)"
            },
            {
                "key": "alt+cmd+b",
                "command": "-workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "alt+cmd+0",
                "command": "-workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "ctrl+cmd+f",
                "command": "-workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!isIOS)"
            },
            {
                "key": "cmd+k cmd+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "cmd+j",
                "command": "-workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+b",
                "command": "-workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k z",
                "command": "-workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (activeEditorIsPinned)"
            },
            {
                "key": "cmd+numpad_add",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+numpad_subtract",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+-",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+-",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+numpad0",
                "command": "-workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "shift+cmd+m",
                "command": "-workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.actions.workbench.panel.output.clearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (outputFilterFocus)"
            },
            {
                "key": "escape",
                "command": "-workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (bannerFocused)"
            },
            {
                "key": "shift+cmd+y",
                "command": "-workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.panel.repl.view.active)"
            },
            {
                "key": "cmd+c",
                "command": "-workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "cmd+k c",
                "command": "-workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k d",
                "command": "-workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "cmd+k e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+cmd+i",
                "command": "-workbench.panel.chat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "-workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "-workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (statusBarFocused)"
            },
            {
                "key": "shift+cmd+d",
                "command": "-workbench.view.debug",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "shift+cmd+e",
                "command": "-workbench.view.explorer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "shift+cmd+x",
                "command": "-workbench.view.extensions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.scm.active)"
            },
            {
                "key": "shift+cmd+f",
                "command": "-workbench.view.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "alt+right",
                "command": "-breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+left",
                "command": "-breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+y",
                "command": "-chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "cmd+n",
                "command": "-chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "alt+cmd+f",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookOutputInputFocused)"
            },
            {
                "key": "cmd+a",
                "command": "-notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "cmd+/",
                "command": "-terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+k down",
                "command": "-views.moveViewDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView != '')"
            },
            {
                "key": "cmd+k left",
                "command": "-views.moveViewLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView != '')"
            },
            {
                "key": "cmd+k right",
                "command": "-views.moveViewRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView != '')"
            },
            {
                "key": "cmd+k up",
                "command": "-views.moveViewUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView != '')"
            },
            {
                "key": "cmd+enter",
                "command": "-workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+n",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat)"
            },
            {
                "key": "shift+cmd+]",
                "command": "-workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugRepl)"
            },
            {
                "key": "shift+cmd+[",
                "command": "-workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inDebugRepl)"
            },
            {
                "key": "cmd+n",
                "command": "-workbench.action.openChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "cmd+k",
                "command": "-workbench.action.terminal.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+cmd+down",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+right",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "shift+cmd+o",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "shift+cmd+g",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "shift+cmd+l",
                "command": "-workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+k",
                "command": "-workbench.debug.panel.action.clearReplAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "-workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "enter",
                "command": "-debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (watchExpressionsFocused)"
            },
            {
                "key": "enter",
                "command": "-debug.setVariable",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "-debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (mostRecentReplEditor)"
            },
            {
                "key": "cmd+v",
                "command": "-filesExplorer.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "shift+cmd+y",
                "command": "-chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "alt+cmd+y",
                "command": "-chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+cmd+n",
                "command": "-chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "alt+cmd+backspace",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "shift+cmd+.",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "shift+cmd+o",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "cmd+e",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac"
            },
            {
                "key": "escape",
                "command": "-editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "cmd+down",
                "command": "-explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+c",
                "command": "-filesExplorer.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "cmd+x",
                "command": "-filesExplorer.cut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "-filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "-firstCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "-inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+cmd+y",
                "command": "-inlineChat2.keep",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+cmd+n",
                "command": "-inlineChat2.undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "-lastCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "shift+cmd+t",
                "command": "-mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "-moveFileToTrash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-moveFileToTrash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "-nextCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-previousCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "-remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "cmd+c",
                "command": "-remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "enter",
                "command": "-remote.tunnel.label",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "enter",
                "command": "-renameFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "-workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "-list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (treestickyScrollFocused)"
            },
            {
                "key": "left",
                "command": "-list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (treestickyScrollFocused)"
            },
            {
                "key": "cmd+down",
                "command": "-list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+cmd+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+cmd+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "cmd+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+-",
                "command": "-workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "cmd+p",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+q",
                "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "shift+cmd+p",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+q",
                "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.quickOpenSelectNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpenSelectPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (inQuickOpen)"
            },
            {
                "key": "cmd+r",
                "command": "-workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isDevelopment)"
            },
            {
                "key": "shift+cmd+f",
                "command": "-workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "alt+cmd+i",
                "command": "-workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "cmd+k alt+cmd+s",
                "command": "-git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+cmd+v",
                "command": "-markdown.showPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "-references-view.findReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "cmd+k cmd+n",
                "command": "-git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "cmd+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "-references-view.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "cmd+k cmd+r",
                "command": "-git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "-references-view.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "-references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "cmd+i",
                "command": "-workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "-chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (chatAttachmentResource)"
            },
            {
                "key": "cmd+i",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+.",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "-previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+n",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+p",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isMac && (comparingMovedCode)"
            },
            {
                "key": "escape escape",
                "command": "-workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "ctrl+end",
                "command": "-cursorBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+end",
                "command": "-cursorBottomSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+down",
                "command": "-cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+left",
                "command": "-cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+pagedown",
                "command": "-cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+pageup",
                "command": "-cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+right",
                "command": "-cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+up",
                "command": "-cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "-cursorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-cursorDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "-cursorDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "end",
                "command": "-cursorEnd",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "-cursorEndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "home",
                "command": "-cursorHome",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "-cursorHomeSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "-cursorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "-cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "-cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "-cursorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+home",
                "command": "-cursorTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+home",
                "command": "-cursorTopSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "-cursorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-cursorUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "-deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "-deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "-editor.action.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+l",
                "command": "-expandLineSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "shift+tab",
                "command": "-outdent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+z",
                "command": "-redo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+y",
                "command": "-redo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+down",
                "command": "-scrollLineDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-scrollLineUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "alt+pagedown",
                "command": "-scrollPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "alt+pageup",
                "command": "-scrollPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-tab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+z",
                "command": "-undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+down",
                "command": "-cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "-cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "-cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "-cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "-cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "-cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "-inlineChat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "-notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "-goToNextReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "-goToPreviousReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatShowingHint)"
            },
            {
                "key": "ctrl+enter",
                "command": "-refactorPreview.apply",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "-testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "-workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "-actions.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus || editorIsOpen)"
            },
            {
                "key": "enter",
                "command": "-breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "ctrl+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+u",
                "command": "-cursorUndo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+right",
                "command": "-cursorWordEndRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+left",
                "command": "-cursorWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+backspace",
                "command": "-deleteWordLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+delete",
                "command": "-deleteWordRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "-editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isInDiffEditor)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+d",
                "command": "-editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "shift+alt+.",
                "command": "-editor.action.autoFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+a",
                "command": "-editor.action.blockComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+f2",
                "command": "-editor.action.changeAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+insert",
                "command": "-editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+c",
                "command": "-editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+delete",
                "command": "-editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+x",
                "command": "-editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+insert",
                "command": "-editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+v",
                "command": "-editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+/",
                "command": "-editor.action.commentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+down",
                "command": "-editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+up",
                "command": "-editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+k",
                "command": "-editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "-editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "-editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "-editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+f",
                "command": "-editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+alt+f",
                "command": "-editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "shift+alt+f",
                "command": "-editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+f",
                "command": "-editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "-editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "-editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+f12",
                "command": "-editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "-editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "-editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (standaloneColorPickerVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "-editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+]",
                "command": "-editor.action.indentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (standaloneColorPickerFocused)"
            },
            {
                "key": "ctrl+alt+up",
                "command": "-editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+alt+down",
                "command": "-editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "-editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+f2",
                "command": "-editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "-editor.action.marker.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "-editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "-editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "-editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+f10",
                "command": "-editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "-editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+f3",
                "command": "-editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "-editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "ctrl+[",
                "command": "-editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "-editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "-editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "alt+f12",
                "command": "-editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+shift+f12",
                "command": "-editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "-editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+alt+f10",
                "command": "-editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+shift+f3",
                "command": "-editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.action.quickFix",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-editor.action.refactor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "-editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+u",
                "command": "-editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "-editor.action.rename",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+f12",
                "command": "-editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "ctrl+k f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+k ctrl+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "-editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "-editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "-editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "-editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "down",
                "command": "-editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "-editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textInputFocus)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "-editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "-editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "-editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus || editorIsOpen)"
            },
            {
                "key": "ctrl+enter",
                "command": "-editor.action.submitComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (commentEditorFocused)"
            },
            {
                "key": "ctrl+m",
                "command": "-editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+z",
                "command": "-editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+space",
                "command": "-editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "-editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "-editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "-editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "-editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "-editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "-editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "-editor.cancelOperation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cancellableOperation)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.changeDropType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (dropWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "-editor.changePasteType",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (exceptionWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "-editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "-editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+[",
                "command": "-editor.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+0",
                "command": "-editor.foldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+/",
                "command": "-editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+-",
                "command": "-editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+1",
                "command": "-editor.foldLevel1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+2",
                "command": "-editor.foldLevel2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+3",
                "command": "-editor.foldLevel3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+4",
                "command": "-editor.foldLevel4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+5",
                "command": "-editor.foldLevel5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+6",
                "command": "-editor.foldLevel6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+7",
                "command": "-editor.foldLevel7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+[",
                "command": "-editor.foldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "-editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "-editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "-editor.toggleFold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+shift+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+shift+]",
                "command": "-editor.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "-editor.unfoldAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+=",
                "command": "-editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+]",
                "command": "-editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "-inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "-insertSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "ctrl+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-interactive.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+enter",
                "command": "-mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "-notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "-notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "-notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "-notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-notebook.cell.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "-notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "-notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "shift+alt+f",
                "command": "-notebook.formatCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "-openReferenceToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-repl.action.filter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-repl.action.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "-repl.execute",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "-repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "ctrl+shift+backspace",
                "command": "-search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "-settings.action.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "-settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor)"
            },
            {
                "key": "ctrl+/",
                "command": "-toggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k f2",
                "command": "-togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "-welcome.goBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "-workbench.action.addComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeCursorHasCommentingRange)"
            },
            {
                "key": "ctrl+/",
                "command": "-workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+.",
                "command": "-workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "-workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "ctrl+right",
                "command": "-editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "-inlineChat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "-testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "-testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "-closeFindWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "-editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+c",
                "command": "-toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+l",
                "command": "-toggleFindInSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+r",
                "command": "-toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "alt+p",
                "command": "-togglePreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "-jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "-jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveEditorMessage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-leaveSnippet",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "-closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-closeQuickDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "-closeParameterHints",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "-showNextParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "-showPrevParameterHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "-acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "-focusSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "-hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "-insertBestCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "-insertNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "-insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "-selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "-selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "-selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "-selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+i",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "-toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "-acceptRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "ctrl+enter",
                "command": "-acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "-cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "-cancelRenameInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "-focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "-focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (renameInputVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-workbench.action.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!editorTextFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+;",
                "command": "-breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "-breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "-breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "-breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "-breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+down",
                "command": "-chat.action.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+enter",
                "command": "-chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+backspace",
                "command": "-chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "-chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "-chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "-chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "-commentsClearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-commentsFocusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "ctrl+down",
                "command": "-commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (commentsFilterFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!editorFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "-copyFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+c",
                "command": "-copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "-cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+left",
                "command": "-cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+right",
                "command": "-cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+right",
                "command": "-cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+alt+c",
                "command": "-debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointsFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointsFocused)"
            },
            {
                "key": "ctrl+f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "-debug.openView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!debuggersAvailable)"
            },
            {
                "key": "delete",
                "command": "-debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "delete",
                "command": "-debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "-decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "-editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "-editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "-editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "-editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+/",
                "command": "-editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "-editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "-editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "-editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "-editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (resource == 'vscode-userdata:/d%3A/a/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "insert",
                "command": "-editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+f9",
                "command": "-editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "-editor.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "-editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSubtypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "-editor.showSupertypes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "-explorer.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "-filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-history.showNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-history.showPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "-iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "-iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "-iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "-iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "-increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "-inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "-inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+r",
                "command": "-inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "ctrl+k i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "ctrl+z",
                "command": "-inlineChat.unstash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "-inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "-inlineChat2.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "ctrl+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "-interactive.history.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "-interactive.history.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+end",
                "command": "-interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+home",
                "command": "-interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "ctrl+c",
                "command": "-keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "-keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "ctrl+k ctrl+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+k",
                "command": "-keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "-keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "delete",
                "command": "-keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "-keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings)"
            },
            {
                "key": "alt+p",
                "command": "-keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "-list.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-list.closeFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && treeFindOpen)"
            },
            {
                "key": "left",
                "command": "-list.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "-list.collapseAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "-list.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "-list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "-list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-list.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+down",
                "command": "-list.focusAnyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "-list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "-list.focusAnyLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "-list.focusAnyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "-list.focusDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "-list.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "-list.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "-list.focusPageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "-list.focusPageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "-list.focusUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "-list.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "-list.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "enter",
                "command": "-list.select",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "-list.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-list.showHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.toggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-list.toggleSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "-noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "-noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "-noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+d",
                "command": "-notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+k m",
                "command": "-notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "-notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "-notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "-notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+k i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "-notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "-notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "ctrl+k t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "-notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "-notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-notebook.cell.delete",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "-notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "-notebook.cell.edit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "ctrl+k t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "shift+alt+win+j",
                "command": "-notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused)"
            },
            {
                "key": "alt+win+j",
                "command": "-notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "-notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "-notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-notebook.cell.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "ctrl+k y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "-notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "-notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "-notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "-notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "-notebook.find",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+end",
                "command": "-notebook.focusBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+down",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+home",
                "command": "-notebook.focusTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+[",
                "command": "-notebook.fold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+alt+f",
                "command": "-notebook.format",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "-notebook.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+]",
                "command": "-notebook.unfold",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+a",
                "command": "-notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "delete",
                "command": "-notification.clear",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "-notification.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "-notification.expand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "-notification.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "-notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "-notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "-notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "-notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+n",
                "command": "-notifications.showList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "escape",
                "command": "-problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemsFilterFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-problems.action.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+f",
                "command": "-problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+down",
                "command": "-problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemsFilterFocus)"
            },
            {
                "key": "enter",
                "command": "-problems.action.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-problems.action.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "-problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (problemFocus)"
            },
            {
                "key": "ctrl+alt+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "-quickInput.first",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "-quickInput.last",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "-quickInput.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+down",
                "command": "-quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+down",
                "command": "-quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "-quickInput.pageNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "-quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "-quickInput.previous",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+up",
                "command": "-quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+up",
                "command": "-quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "-quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "-refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+alt+r",
                "command": "-revealFileInOS",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!editorFocus)"
            },
            {
                "key": "enter",
                "command": "-revealReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k s",
                "command": "-saveAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+enter",
                "command": "-scm.acceptInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "-scm.clearInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "-scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmRepository)"
            },
            {
                "key": "down",
                "command": "-scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "-search.action.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "ctrl+c",
                "command": "-search.action.copyMatch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrMatchFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "-search.action.copyPath",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "-search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "-search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "-search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "alt+enter",
                "command": "-search.action.openInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "enter",
                "command": "-search.action.openResult",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "delete",
                "command": "-search.action.remove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-search.action.replaceAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "-search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "-search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "-search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "-settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "-settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "-settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "-settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "-settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSettingsEditor)"
            },
            {
                "key": "ctrl+; ctrl+x",
                "command": "-testing.cancelRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+shift+a",
                "command": "-testing.coverageAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+shift+c",
                "command": "-testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+f",
                "command": "-testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+l",
                "command": "-testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+a",
                "command": "-testing.debugAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+c",
                "command": "-testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+f",
                "command": "-testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+e",
                "command": "-testing.debugFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+l",
                "command": "-testing.debugLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+m",
                "command": "-testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; e",
                "command": "-testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; l",
                "command": "-testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+r",
                "command": "-testing.refreshTests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (testing.canRefresh)"
            },
            {
                "key": "ctrl+; a",
                "command": "-testing.runAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; c",
                "command": "-testing.runAtCursor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; f",
                "command": "-testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+o",
                "command": "-testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (testing.hasAnyResults)"
            },
            {
                "key": "ctrl+; ctrl+shift+i",
                "command": "-testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+; ctrl+i",
                "command": "-testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+h",
                "command": "-testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (testing.isPeekVisible)"
            },
            {
                "key": "alt+c",
                "command": "-toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (searchViewletFocus)"
            },
            {
                "key": "alt+c",
                "command": "-toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+l",
                "command": "-toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor)"
            },
            {
                "key": "alt+r",
                "command": "-toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+p",
                "command": "-toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (searchViewletFocus)"
            },
            {
                "key": "alt+r",
                "command": "-toggleSearchRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (searchViewletFocus)"
            },
            {
                "key": "alt+w",
                "command": "-toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+win+n",
                "command": "-welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+down",
                "command": "-widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "-widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "-workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+backspace",
                "command": "-workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "enter",
                "command": "-workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+f9",
                "command": "-workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "-workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+alt+.",
                "command": "-workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+shift+f9",
                "command": "-workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "delete",
                "command": "-workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+win+/",
                "command": "-workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "alt+win+/",
                "command": "-workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+win+/",
                "command": "-workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "delete",
                "command": "-workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+f4",
                "command": "-workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+w",
                "command": "-workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+shift+w",
                "command": "-workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k w",
                "command": "-workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k f",
                "command": "-workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "ctrl+f4",
                "command": "-workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen)"
            },
            {
                "key": "ctrl+k u",
                "command": "-workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+w",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+f4",
                "command": "-workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+f5",
                "command": "-workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "-workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "ctrl+shift+f5",
                "command": "-workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "-workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "ctrl+f11",
                "command": "-workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "-workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "-workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "-workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "ctrl+k m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!notebookEditorFocused)"
            },
            {
                "key": "alt+`",
                "command": "-workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+alt+v",
                "command": "-workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+k p",
                "command": "-workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (true)"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "ctrl+o",
                "command": "-workbench.action.files.openLocalFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "-workbench.action.files.openLocalFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k r",
                "command": "-workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+s",
                "command": "-workbench.action.files.save",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+s",
                "command": "-workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+s",
                "command": "-workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+s",
                "command": "-workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+up",
                "command": "-workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+down",
                "command": "-workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+8",
                "command": "-workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+5",
                "command": "-workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+1",
                "command": "-workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+4",
                "command": "-workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "f6",
                "command": "-workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+f6",
                "command": "-workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+2",
                "command": "-workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+7",
                "command": "-workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+0",
                "command": "-workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+6",
                "command": "-workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+3",
                "command": "-workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+g",
                "command": "-workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "-workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "-workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (sideBySideEditorActive)"
            },
            {
                "key": "ctrl+k enter",
                "command": "-workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "-workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+9",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+0",
                "command": "-workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k down",
                "command": "-workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k left",
                "command": "-workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k right",
                "command": "-workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k up",
                "command": "-workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+pageup",
                "command": "-workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+pagedown",
                "command": "-workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+alt+1",
                "command": "-workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+alt+9",
                "command": "-workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+alt+left",
                "command": "-workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "browserback",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (canNavigateBack)"
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (canNavigateForward)"
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (canNavigateForward)"
            },
            {
                "key": "ctrl+k ctrl+q",
                "command": "-workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+pagedown",
                "command": "-workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+1",
                "command": "-workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+2",
                "command": "-workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+3",
                "command": "-workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+4",
                "command": "-workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+5",
                "command": "-workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+6",
                "command": "-workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+7",
                "command": "-workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+8",
                "command": "-workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "alt+9",
                "command": "-workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+s",
                "command": "-workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+,",
                "command": "-workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+u",
                "command": "-workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.panel.output.active)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!activeEditorIsPinned)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+pageup",
                "command": "-workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+q",
                "command": "-workbench.action.quickOpenView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+alt+l",
                "command": "-workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled)"
            },
            {
                "key": "ctrl+alt+o",
                "command": "-workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+t",
                "command": "-workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+h",
                "command": "-workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+j",
                "command": "-workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "ctrl+k ctrl+t",
                "command": "-workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+p",
                "command": "-workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+t",
                "command": "-workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "f1",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+\\",
                "command": "-workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "-workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+b",
                "command": "-workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "-workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "-workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+c",
                "command": "-workbench.action.terminal.copyAndClearSelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "alt+f2",
                "command": "-workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f",
                "command": "-workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "-workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+g",
                "command": "-workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "-workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "-workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f4",
                "command": "-workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "-workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "-workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!terminalFocus)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+v",
                "command": "-workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "f2",
                "command": "-workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "-workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pagedown",
                "command": "-workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+end",
                "command": "-workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+end",
                "command": "-workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+down",
                "command": "-workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+up",
                "command": "-workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+home",
                "command": "-workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+home",
                "command": "-workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "-workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pageup",
                "command": "-workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "-workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "-workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+v",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u0016"
                }
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5C"
                }
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5D"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalShellType == 'cmd')",
                "args": {
                    "text": "\b"
                }
            },
            {
                "key": "ctrl+delete",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "-workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "ctrl+.",
                "command": "-workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "-workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "-workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "-workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!textInputFocus)"
            },
            {
                "key": "alt+c",
                "command": "-workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+r",
                "command": "-workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+w",
                "command": "-workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "-workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminal.active)"
            },
            {
                "key": "ctrl+alt+b",
                "command": "-workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "shift+alt+0",
                "command": "-workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "f11",
                "command": "-workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!isIOS)"
            },
            {
                "key": "ctrl+k ctrl+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "ctrl+j",
                "command": "-workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+b",
                "command": "-workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k z",
                "command": "-workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (activeEditorIsPinned)"
            },
            {
                "key": "ctrl+numpad_add",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+=",
                "command": "-workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+numpad_subtract",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+-",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+-",
                "command": "-workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+numpad0",
                "command": "-workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+shift+m",
                "command": "-workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (bannerFocused)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.panel.repl.view.active)"
            },
            {
                "key": "ctrl+c",
                "command": "-workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "ctrl+k c",
                "command": "-workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k d",
                "command": "-workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "ctrl+k e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "-workbench.panel.chat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "-workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "-workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "-workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "-workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "-workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (statusBarFocused)"
            },
            {
                "key": "ctrl+shift+d",
                "command": "-workbench.view.debug",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.view.explorer",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "ctrl+shift+x",
                "command": "-workbench.view.extensions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.scm.active)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.view.search",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "ctrl+right",
                "command": "-breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "-breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+y",
                "command": "-chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+n",
                "command": "-chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "-inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+alt+f",
                "command": "-list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "-notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "-notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "-terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+k down",
                "command": "-views.moveViewDown",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView != '')"
            },
            {
                "key": "ctrl+k left",
                "command": "-views.moveViewLeft",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView != '')"
            },
            {
                "key": "ctrl+k right",
                "command": "-views.moveViewRight",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView != '')"
            },
            {
                "key": "ctrl+k up",
                "command": "-views.moveViewUp",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (focusedView != '')"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "-workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugRepl)"
            },
            {
                "key": "ctrl+pageup",
                "command": "-workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inDebugRepl)"
            },
            {
                "key": "ctrl+n",
                "command": "-workbench.action.openChat",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "-workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+right",
                "command": "-workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "-workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "-workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "-workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "-workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "tab",
                "command": "-editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "-workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "-workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "-workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "f2",
                "command": "-debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (watchExpressionsFocused)"
            },
            {
                "key": "f2",
                "command": "-debug.setVariable",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "-debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "-interactive.history.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "-notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "-repl.input.focus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (mostRecentReplEditor)"
            },
            {
                "key": "ctrl+v",
                "command": "-filesExplorer.paste",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+alt+y",
                "command": "-chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+delete",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-deleteFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "-editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+e",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows"
            },
            {
                "key": "escape",
                "command": "-editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "-editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "enter",
                "command": "-explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-filesExplorer.copy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "ctrl+x",
                "command": "-filesExplorer.cut",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "-filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "-firstCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "-inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "-inlineChat2.keep",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "-inlineChat2.undo",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "-lastCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "ctrl+shift+t",
                "command": "-mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "-moveFileToTrash",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "-nextCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-previousCompressedFolder",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "-remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "-remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "-remote.tunnel.label",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "-renameFile",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "-workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "-workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "-closeReferenceSearch",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "left",
                "command": "-list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "-list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "-list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideList",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "-quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+left",
                "command": "-workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+q",
                "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+q",
                "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isDevelopment)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "-workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "-workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "-notifications.hideToasts",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "-workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "-workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+alt+s",
                "command": "-git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "ctrl+shift+v",
                "command": "-markdown.showPreview",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "-references-view.findReferences",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "-extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+n",
                "command": "-git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "ctrl+k v",
                "command": "-markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "-references-view.next",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "-git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "-references-view.prev",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "-references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "-workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "-chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+i",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "-workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "-acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "-previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "-selectNextCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "-selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "-diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.removeOSKeybindings && isWindows && (comparingMovedCode)"
            },
            {
                "key": "escape escape",
                "command": "workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "ctrl+end",
                "command": "cursorBottom",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+end",
                "command": "cursorBottomSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "cursorDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "cursorDownSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "end",
                "command": "cursorEnd",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "cursorEndSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "home",
                "command": "cursorHome",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "cursorHomeSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "cursorLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorLeftSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "cursorPageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "cursorPageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "cursorRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorRightSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+home",
                "command": "cursorTop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+home",
                "command": "cursorTopSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "cursorUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorUpSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "deleteRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "editor.action.selectAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+l",
                "command": "expandLineSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "shift+tab",
                "command": "outdent",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+z",
                "command": "redo",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+y",
                "command": "redo",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+down",
                "command": "scrollLineDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "scrollLineUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+pagedown",
                "command": "scrollPageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+pageup",
                "command": "scrollPageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "tab",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+z",
                "command": "undo",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+down",
                "command": "cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatShowingHint)"
            },
            {
                "key": "ctrl+enter",
                "command": "refactorPreview.apply",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "meta+enter",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "actions.find",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "enter",
                "command": "breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "ctrl+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+u",
                "command": "cursorUndo",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordEndRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+backspace",
                "command": "deleteWordLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+delete",
                "command": "deleteWordRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isInDiffEditor)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+d",
                "command": "editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+[IntlBackslash]",
                "command": "editor.action.autoFix",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+.",
                "command": "editor.action.autoFix",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "ctrl+shift+a",
                "command": "editor.action.blockComment",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+f2",
                "command": "editor.action.changeAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+c",
                "command": "editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+x",
                "command": "editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+insert",
                "command": "editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+v",
                "command": "editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+/",
                "command": "editor.action.commentLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+alt+down",
                "command": "editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+alt+up",
                "command": "editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+k",
                "command": "editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+f",
                "command": "editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+f",
                "command": "editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+f12",
                "command": "editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (standaloneColorPickerVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+[IntlBackslash]",
                "command": "editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+]",
                "command": "editor.action.indentLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (standaloneColorPickerFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+down",
                "command": "editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+f2",
                "command": "editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "editor.action.marker.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+d",
                "command": "editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+f10",
                "command": "editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+down",
                "command": "editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+f3",
                "command": "editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "ctrl+[",
                "command": "editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "ctrl+shift+f10",
                "command": "editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+shift+f12",
                "command": "editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+alt+f10",
                "command": "editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+up",
                "command": "editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+shift+f3",
                "command": "editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.action.quickFix",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "editor.action.refactor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+u",
                "command": "editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "editor.action.rename",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "ctrl+k f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+k ctrl+f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "down",
                "command": "editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+b",
                "command": "editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "editor.action.showHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "ctrl+enter",
                "command": "editor.action.submitComment",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (commentEditorFocused)"
            },
            {
                "key": "ctrl+m",
                "command": "editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+z",
                "command": "editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+space",
                "command": "editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+x",
                "command": "editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "editor.cancelOperation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cancellableOperation)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.changeDropType",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.changePasteType",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+,",
                "command": "editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (exceptionWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+[",
                "command": "editor.fold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+0",
                "command": "editor.foldAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+/",
                "command": "editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+-",
                "command": "editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+8",
                "command": "editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+1",
                "command": "editor.foldLevel1",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+2",
                "command": "editor.foldLevel2",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+3",
                "command": "editor.foldLevel3",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+4",
                "command": "editor.foldLevel4",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+5",
                "command": "editor.foldLevel5",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+6",
                "command": "editor.foldLevel6",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+7",
                "command": "editor.foldLevel7",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+[",
                "command": "editor.foldRecursively",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+.",
                "command": "editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "editor.toggleFold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+shift+l",
                "command": "editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+shift+]",
                "command": "editor.unfold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "editor.unfoldAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+=",
                "command": "editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+9",
                "command": "editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+]",
                "command": "editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "insertSnippet",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "ctrl+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+enter",
                "command": "mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "meta+enter",
                "command": "notebook.cell.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "notebook.formatCell",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "openReferenceToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "repl.action.filter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "repl.action.find",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "ctrl+shift+backspace",
                "command": "search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "settings.action.search",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+/",
                "command": "toggleExplainMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k f2",
                "command": "togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "welcome.goBack",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "workbench.action.addComment",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeCursorHasCommentingRange)"
            },
            {
                "key": "ctrl+/",
                "command": "workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+.",
                "command": "workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "ctrl+right",
                "command": "editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "inlineChat.close",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+c",
                "command": "toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+l",
                "command": "toggleFindInSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+r",
                "command": "toggleFindRegex",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "alt+p",
                "command": "togglePreserveCase",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveEditorMessage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "insertBestCompletion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "insertNextSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+i",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptRenameInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "ctrl+enter",
                "command": "acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (renameInputVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "workbench.action.showHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!editorTextFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+;",
                "command": "breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+down",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+enter",
                "command": "chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+backspace",
                "command": "chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "commentsClearFilterText",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "commentsFocusFilter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "ctrl+down",
                "command": "commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+alt+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+shift+alt+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+alt+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+left",
                "command": "cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+right",
                "command": "cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+alt+c",
                "command": "debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointsFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointsFocused)"
            },
            {
                "key": "ctrl+f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "delete",
                "command": "debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "delete",
                "command": "debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+alt+f2",
                "command": "editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+/",
                "command": "editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (resource == 'vscode-userdata:/home/runner/work/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "insert",
                "command": "editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+f9",
                "command": "editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "editor.detectLanguage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSubtypes",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSupertypes",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "explorer.openToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+r",
                "command": "inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "ctrl+k i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "ctrl+z",
                "command": "inlineChat.unstash",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "ctrl+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "interactive.history.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "interactive.history.previous",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+end",
                "command": "interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+home",
                "command": "interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+a",
                "command": "keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "ctrl+c",
                "command": "keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "ctrl+k ctrl+e",
                "command": "keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+k",
                "command": "keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "delete",
                "command": "keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings)"
            },
            {
                "key": "alt+p",
                "command": "keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "list.clear",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "list.closeFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && treeFindOpen)"
            },
            {
                "key": "left",
                "command": "list.collapse",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "list.collapseAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "list.expand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+down",
                "command": "list.focusAnyDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "list.focusAnyLast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "list.focusAnyUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "list.focusDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "list.focusFirst",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "list.focusLast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "list.focusPageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "list.focusPageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "list.focusUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "list.scrollDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "list.scrollUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "enter",
                "command": "list.select",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "list.selectAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "list.showHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.toggleExpand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "list.toggleSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+d",
                "command": "notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+k m",
                "command": "notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+k i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "notebook.cell.delete",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "notebook.cell.edit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "shift+alt+meta+j",
                "command": "notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "alt+meta+j",
                "command": "notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "notebook.cell.split",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "ctrl+k y",
                "command": "notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "notebook.find",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+end",
                "command": "notebook.focusBottom",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+home",
                "command": "notebook.focusTop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "left",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+[",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+i",
                "command": "notebook.format",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "notebook.hideFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+]",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+a",
                "command": "notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "delete",
                "command": "notification.clear",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "notification.collapse",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "notification.expand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+n",
                "command": "notifications.showList",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "escape",
                "command": "problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "problems.action.copy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+f",
                "command": "problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+down",
                "command": "problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "enter",
                "command": "problems.action.open",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "problems.action.openToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+alt+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+down",
                "command": "quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+down",
                "command": "quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+up",
                "command": "quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+up",
                "command": "quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+alt+r",
                "command": "revealFileInOS",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!editorFocus)"
            },
            {
                "key": "enter",
                "command": "revealReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "scm.acceptInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "scm.clearInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmRepository)"
            },
            {
                "key": "down",
                "command": "scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "search.action.cancel",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "ctrl+c",
                "command": "search.action.copyMatch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrMatchFocus)"
            },
            {
                "key": "ctrl+alt+c",
                "command": "search.action.copyPath",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "alt+enter",
                "command": "search.action.openInEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "enter",
                "command": "search.action.openResult",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "delete",
                "command": "search.action.remove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replace",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "search.action.replaceAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+; ctrl+x",
                "command": "testing.cancelRun",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+shift+a",
                "command": "testing.coverageAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+shift+c",
                "command": "testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+f",
                "command": "testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+l",
                "command": "testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+a",
                "command": "testing.debugAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+c",
                "command": "testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+f",
                "command": "testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+e",
                "command": "testing.debugFailTests",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+l",
                "command": "testing.debugLastRun",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+m",
                "command": "testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; e",
                "command": "testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; l",
                "command": "testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+r",
                "command": "testing.refreshTests",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (testing.canRefresh)"
            },
            {
                "key": "ctrl+; a",
                "command": "testing.runAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; c",
                "command": "testing.runAtCursor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; f",
                "command": "testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+o",
                "command": "testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (testing.hasAnyResults)"
            },
            {
                "key": "ctrl+; ctrl+shift+i",
                "command": "testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+; ctrl+i",
                "command": "testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+h",
                "command": "testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (testing.isPeekVisible)"
            },
            {
                "key": "alt+c",
                "command": "toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+c",
                "command": "toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+l",
                "command": "toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+r",
                "command": "toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+p",
                "command": "toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+r",
                "command": "toggleSearchRegex",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+meta+n",
                "command": "welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+down",
                "command": "widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "ctrl+escape",
                "command": "workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+f9",
                "command": "workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+shift+alt+i",
                "command": "workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+alt+.",
                "command": "workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+shift+f9",
                "command": "workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "delete",
                "command": "workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+meta+/",
                "command": "workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "alt+meta+/",
                "command": "workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+meta+/",
                "command": "workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "delete",
                "command": "workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+w",
                "command": "workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+shift+w",
                "command": "workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k w",
                "command": "workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k f",
                "command": "workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+k u",
                "command": "workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+w",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+f4",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k shift+o",
                "command": "workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k o",
                "command": "workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "ctrl+shift+f5",
                "command": "workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "ctrl+f11",
                "command": "workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "ctrl+k m",
                "command": "workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!notebookEditorFocused)"
            },
            {
                "key": "ctrl+alt+v",
                "command": "workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+k p",
                "command": "workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (true)"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "workbench.action.files.openFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openLocalFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "workbench.action.files.openLocalFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k r",
                "command": "workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+s",
                "command": "workbench.action.files.save",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+s",
                "command": "workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+s",
                "command": "workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k s",
                "command": "workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+up",
                "command": "workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+down",
                "command": "workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+8",
                "command": "workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+5",
                "command": "workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+1",
                "command": "workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+4",
                "command": "workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "f6",
                "command": "workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+f6",
                "command": "workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+2",
                "command": "workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+7",
                "command": "workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+0",
                "command": "workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+6",
                "command": "workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+3",
                "command": "workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+o",
                "command": "workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (sideBySideEditorActive)"
            },
            {
                "key": "ctrl+k enter",
                "command": "workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+9",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+0",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k down",
                "command": "workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k left",
                "command": "workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k right",
                "command": "workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k up",
                "command": "workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+pageup",
                "command": "workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+pagedown",
                "command": "workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+alt+1",
                "command": "workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+alt+9",
                "command": "workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+alt+right",
                "command": "workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+alt+left",
                "command": "workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "browserback",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (canNavigateBack)"
            },
            {
                "key": "ctrl+alt+-",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (canNavigateForward)"
            },
            {
                "key": "ctrl+shift+-",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (canNavigateForward)"
            },
            {
                "key": "ctrl+k ctrl+q",
                "command": "workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+n",
                "command": "workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+pagedown",
                "command": "workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+1",
                "command": "workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+2",
                "command": "workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+3",
                "command": "workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+4",
                "command": "workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+5",
                "command": "workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+6",
                "command": "workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+7",
                "command": "workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+8",
                "command": "workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "alt+9",
                "command": "workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+s",
                "command": "workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+,",
                "command": "workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+h",
                "command": "workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.panel.output.active)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!activeEditorIsPinned)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+pageup",
                "command": "workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+e",
                "command": "workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+shift+alt+l",
                "command": "workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled)"
            },
            {
                "key": "ctrl+q",
                "command": "workbench.action.quit",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+alt+o",
                "command": "workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+t",
                "command": "workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+h",
                "command": "workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+j",
                "command": "workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "ctrl+k ctrl+t",
                "command": "workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+p",
                "command": "workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+t",
                "command": "workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "f1",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+p",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+\\",
                "command": "workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+b",
                "command": "workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "ctrl+[IntlBackslash]",
                "command": "workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+alt+f2",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f",
                "command": "workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!terminalFocus)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+insert",
                "command": "workbench.action.terminal.pasteSelection",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "f2",
                "command": "workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "workbench.action.terminal.resizePaneLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "workbench.action.terminal.resizePaneRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pagedown",
                "command": "workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+end",
                "command": "workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+end",
                "command": "workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "shift+home",
                "command": "workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+home",
                "command": "workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+shift+up",
                "command": "workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pageup",
                "command": "workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5C"
                }
            },
            {
                "key": "alt+left",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5D"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "ctrl+delete",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "ctrl+.",
                "command": "workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!textInputFocus)"
            },
            {
                "key": "alt+c",
                "command": "workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+r",
                "command": "workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+w",
                "command": "workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminal.active)"
            },
            {
                "key": "ctrl+alt+b",
                "command": "workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "shift+alt+0",
                "command": "workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "f11",
                "command": "workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!isIOS)"
            },
            {
                "key": "ctrl+k ctrl+m",
                "command": "workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "ctrl+j",
                "command": "workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+b",
                "command": "workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k z",
                "command": "workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (activeEditorIsPinned)"
            },
            {
                "key": "ctrl+numpad_add",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+numpad_subtract",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+-",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+numpad0",
                "command": "workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+shift+m",
                "command": "workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "workbench.actions.workbench.panel.output.clearFilterText",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (outputFilterFocus)"
            },
            {
                "key": "escape",
                "command": "workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (bannerFocused)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.panel.repl.view.active)"
            },
            {
                "key": "ctrl+c",
                "command": "workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "ctrl+k c",
                "command": "workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k d",
                "command": "workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "ctrl+k e",
                "command": "workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "workbench.panel.chat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (statusBarFocused)"
            },
            {
                "key": "ctrl+shift+d",
                "command": "workbench.view.debug",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "workbench.view.explorer",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "ctrl+shift+x",
                "command": "workbench.view.extensions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "workbench.view.scm",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.scm.active)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.view.search",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "ctrl+right",
                "command": "breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+y",
                "command": "chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+n",
                "command": "chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+alt+f",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+k down",
                "command": "views.moveViewDown",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k left",
                "command": "views.moveViewLeft",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k right",
                "command": "views.moveViewRight",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k up",
                "command": "views.moveViewUp",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugRepl)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inDebugRepl)"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.openChat",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+right",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+left",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "f2",
                "command": "debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (watchExpressionsFocused)"
            },
            {
                "key": "f2",
                "command": "debug.setVariable",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (mostRecentReplEditor)"
            },
            {
                "key": "ctrl+v",
                "command": "filesExplorer.paste",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+alt+y",
                "command": "chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+delete",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "ctrl+shift+[IntlBackslash]",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+e",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f4",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.linuxKeybindings"
            },
            {
                "key": "escape",
                "command": "editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "enter",
                "command": "explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "filesExplorer.copy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "ctrl+x",
                "command": "filesExplorer.cut",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "firstCompressedFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "inlineChat2.keep",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "inlineChat2.undo",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "lastCompressedFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "ctrl+shift+t",
                "command": "mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "moveFileToTrash",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "nextCompressedFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "previousCompressedFolder",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "remote.tunnel.label",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "renameFile",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "left",
                "command": "list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "notifications.hideList",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+alt+-",
                "command": "workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+e",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+p",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isDevelopment)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+alt+s",
                "command": "git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "ctrl+shift+v",
                "command": "markdown.showPreview",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "references-view.findReferences",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+n",
                "command": "git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "ctrl+k v",
                "command": "markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "references-view.next",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "references-view.prev",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.linuxKeybindings && (comparingMovedCode)"
            },
            {
                "key": "escape escape",
                "command": "workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "cursorBottom",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+cmd+down",
                "command": "cursorBottomSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+down",
                "command": "cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+left",
                "command": "cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+pagedown",
                "command": "cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+pageup",
                "command": "cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+right",
                "command": "cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+cmd+up",
                "command": "cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+n",
                "command": "cursorDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "cursorDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "cursorDownSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+right",
                "command": "cursorEnd",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "end",
                "command": "cursorEnd",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+cmd+right",
                "command": "cursorEndSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "cursorEndSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "cmd+left",
                "command": "cursorHome",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "home",
                "command": "cursorHome",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+cmd+left",
                "command": "cursorHomeSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "cursorHomeSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+b",
                "command": "cursorLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "cursorLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorLeftSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+e",
                "command": "cursorLineEnd",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "cursorLineEndSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "cursorLineStart",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+a",
                "command": "cursorLineStartSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "cursorPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "cursorPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "cursorRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "cursorRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorRightSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "cursorTop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+cmd+up",
                "command": "cursorTopSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+p",
                "command": "cursorUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "cursorUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorUpSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+delete",
                "command": "deleteRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+d",
                "command": "deleteRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "deleteRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+a",
                "command": "editor.action.selectAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+c",
                "command": "execCopy",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+x",
                "command": "execCut",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+v",
                "command": "execPaste",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+l",
                "command": "expandLineSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "cmd+up",
                "command": "inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+o",
                "command": "lineBreakInsert",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "shift+tab",
                "command": "outdent",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "shift+cmd+z",
                "command": "redo",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+pagedown",
                "command": "scrollLineDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "scrollLineUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+pagedown",
                "command": "scrollPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+pageup",
                "command": "scrollPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "tab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "cmd+z",
                "command": "undo",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+down",
                "command": "cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+up",
                "command": "notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+up",
                "command": "notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "cmd+down",
                "command": "notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "cmd+down",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "cmd+up",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatShowingHint)"
            },
            {
                "key": "cmd+enter",
                "command": "refactorPreview.apply",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "cmd+f",
                "command": "actions.find",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "cmd+e",
                "command": "actions.findWithSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "enter",
                "command": "breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "cmd+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "cmd+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "cmd+u",
                "command": "cursorUndo",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+right",
                "command": "cursorWordEndRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+left",
                "command": "cursorWordLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+alt+left",
                "command": "cursorWordPartLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+left",
                "command": "cursorWordPartLeftSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "cursorWordPartRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+right",
                "command": "cursorWordPartRightSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "deleteAllLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "cmd+delete",
                "command": "deleteAllRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k",
                "command": "deleteAllRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+backspace",
                "command": "deleteWordLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "deleteWordPartLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+delete",
                "command": "deleteWordPartRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+delete",
                "command": "deleteWordRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isInDiffEditor)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+d",
                "command": "editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+cmd+.",
                "command": "editor.action.autoFix",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+a",
                "command": "editor.action.blockComment",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "cmd+f2",
                "command": "editor.action.changeAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+c",
                "command": "editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+x",
                "command": "editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+v",
                "command": "editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+/",
                "command": "editor.action.commentLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+down",
                "command": "editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+up",
                "command": "editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+k",
                "command": "editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "cmd+f",
                "command": "editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+alt+f",
                "command": "editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "shift+alt+f",
                "command": "editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "cmd+k cmd+f",
                "command": "editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+down",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "cmd+f12",
                "command": "editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "cmd+up",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (standaloneColorPickerVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+,",
                "command": "editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+]",
                "command": "editor.action.indentLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (standaloneColorPickerFocused)"
            },
            {
                "key": "alt+cmd+up",
                "command": "editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "alt+cmd+down",
                "command": "editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+j",
                "command": "editor.action.joinLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+\\",
                "command": "editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+cmd+f2",
                "command": "editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "editor.action.marker.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "cmd+k cmd+d",
                "command": "editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+f10",
                "command": "editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "cmd+k alt+cmd+down",
                "command": "editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "cmd+g",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "cmd+f3",
                "command": "editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "cmd+[",
                "command": "editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "alt+f12",
                "command": "editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+cmd+f12",
                "command": "editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+alt+f10",
                "command": "editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "cmd+k alt+cmd+up",
                "command": "editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+cmd+g",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "shift+cmd+f3",
                "command": "editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "cmd+.",
                "command": "editor.action.quickFix",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "editor.action.refactor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+cmd+backspace",
                "command": "editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+k cmd+u",
                "command": "editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "editor.action.rename",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "cmd+f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "cmd+k f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "cmd+k cmd+f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "shift+cmd+l",
                "command": "editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "down",
                "command": "editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+b",
                "command": "editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "editor.action.showHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+cmd+right",
                "command": "editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+cmd+left",
                "command": "editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "alt+cmd+f",
                "command": "editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "cmd+enter",
                "command": "editor.action.submitComment",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (commentEditorFocused)"
            },
            {
                "key": "ctrl+shift+m",
                "command": "editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+z",
                "command": "editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+t",
                "command": "editor.action.transposeLetters",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "shift+cmd+space",
                "command": "editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "cmd+i",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "alt+escape",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+x",
                "command": "editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "cmd+f",
                "command": "editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "editor.cancelOperation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cancellableOperation)"
            },
            {
                "key": "cmd+.",
                "command": "editor.changeDropType",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "cmd+.",
                "command": "editor.changePasteType",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+,",
                "command": "editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (exceptionWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "alt+cmd+[",
                "command": "editor.fold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+0",
                "command": "editor.foldAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+/",
                "command": "editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+-",
                "command": "editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+8",
                "command": "editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+1",
                "command": "editor.foldLevel1",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+2",
                "command": "editor.foldLevel2",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+3",
                "command": "editor.foldLevel3",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+4",
                "command": "editor.foldLevel4",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+5",
                "command": "editor.foldLevel5",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+6",
                "command": "editor.foldLevel6",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+7",
                "command": "editor.foldLevel7",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+[",
                "command": "editor.foldRecursively",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+.",
                "command": "editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+l",
                "command": "editor.toggleFold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k shift+cmd+l",
                "command": "editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "alt+cmd+]",
                "command": "editor.unfold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+j",
                "command": "editor.unfoldAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+=",
                "command": "editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+9",
                "command": "editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "cmd+k cmd+]",
                "command": "editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "insertSnippet",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "cmd+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "cmd+enter",
                "command": "mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+cmd+v",
                "command": "notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "shift+alt+f",
                "command": "notebook.formatCell",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "openReferenceToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "cmd+f",
                "command": "repl.action.filter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "alt+cmd+f",
                "command": "repl.action.find",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "cmd+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "cmd+down",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "shift+cmd+r",
                "command": "rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "shift+cmd+backspace",
                "command": "search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+f",
                "command": "settings.action.search",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor)"
            },
            {
                "key": "cmd+i",
                "command": "settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor)"
            },
            {
                "key": "cmd+/",
                "command": "toggleExplainMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible)"
            },
            {
                "key": "cmd+k f2",
                "command": "togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "welcome.goBack",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "workbench.action.addComment",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeCursorHasCommentingRange)"
            },
            {
                "key": "cmd+/",
                "command": "workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "cmd+.",
                "command": "workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChatInput)"
            },
            {
                "key": "cmd+enter",
                "command": "workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "cmd+right",
                "command": "editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "inlineChat.close",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "shift+cmd+1",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+cmd+c",
                "command": "toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+cmd+l",
                "command": "toggleFindInSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+cmd+r",
                "command": "toggleFindRegex",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "alt+cmd+p",
                "command": "togglePreserveCase",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveEditorMessage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "ctrl+n",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "ctrl+p",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "cmd+i",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "insertBestCompletion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "insertNextSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "cmd+pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "cmd+i",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptRenameInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "cmd+enter",
                "command": "acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (renameInputVisible)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "workbench.action.showHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorTextFocus)"
            },
            {
                "key": "shift+cmd+l",
                "command": "addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+;",
                "command": "breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "alt+right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "alt+left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "shift+cmd+.",
                "command": "breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "cmd+down",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "cmd+c",
                "command": "chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "cmd+enter",
                "command": "chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "cmd+backspace",
                "command": "chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "commentsClearFilterText",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "cmd+f",
                "command": "commentsFocusFilter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "cmd+down",
                "command": "commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorFocus)"
            },
            {
                "key": "cmd+k alt+cmd+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+cmd+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorFocus)"
            },
            {
                "key": "cmd+k shift+alt+cmd+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus)"
            },
            {
                "key": "cmd+left",
                "command": "cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "shift+cmd+left",
                "command": "cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "cmd+right",
                "command": "cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "shift+cmd+right",
                "command": "cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "alt+cmd+c",
                "command": "debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointsFocused)"
            },
            {
                "key": "cmd+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointsFocused)"
            },
            {
                "key": "cmd+f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "cmd+backspace",
                "command": "debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "cmd+backspace",
                "command": "debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+/",
                "command": "editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "cmd+k cmd+k",
                "command": "editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (resource == 'vscode-userdata:/Users/runner/work/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "alt+cmd+o",
                "command": "editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+f9",
                "command": "editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "editor.detectLanguage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSubtypes",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSupertypes",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "explorer.openToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "cmd+i",
                "command": "inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+r",
                "command": "inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+i",
                "command": "inlineChat.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "cmd+k i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "cmd+z",
                "command": "inlineChat.unstash",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "cmd+down",
                "command": "inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "cmd+i",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "cmd+i",
                "command": "inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "cmd+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "interactive.history.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "interactive.history.previous",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "cmd+down",
                "command": "interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "cmd+up",
                "command": "interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+k cmd+a",
                "command": "keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "cmd+c",
                "command": "keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "cmd+k cmd+e",
                "command": "keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "cmd+down",
                "command": "keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+cmd+k",
                "command": "keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "cmd+f",
                "command": "keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings)"
            },
            {
                "key": "alt+cmd+p",
                "command": "keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "list.clear",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "list.closeFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && treeFindOpen)"
            },
            {
                "key": "cmd+up",
                "command": "list.collapse",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "left",
                "command": "list.collapse",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+cmd+up",
                "command": "list.collapseAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+left",
                "command": "list.collapseAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "list.expand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+cmd+f",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+n",
                "command": "list.focusAnyDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+down",
                "command": "list.focusAnyDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "list.focusAnyLast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+alt+p",
                "command": "list.focusAnyUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "list.focusAnyUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+n",
                "command": "list.focusDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "list.focusDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "list.focusFirst",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "list.focusLast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "list.focusPageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "list.focusPageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+p",
                "command": "list.focusUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "list.focusUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+down",
                "command": "list.scrollDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "cmd+up",
                "command": "list.scrollUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "cmd+down",
                "command": "list.select",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "list.select",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+a",
                "command": "list.selectAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "list.showHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.toggleExpand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "list.toggleSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+d",
                "command": "notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+k m",
                "command": "notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "cmd+down",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "cmd+up",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "cmd+down",
                "command": "notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "cmd+up",
                "command": "notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "cmd+k i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "cmd+k t",
                "command": "notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "notebook.cell.delete",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "notebook.cell.edit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "cmd+k cmd+c",
                "command": "notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "cmd+k t",
                "command": "notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "cmd+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "ctrl+shift+alt+j",
                "command": "notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+alt+j",
                "command": "notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+.",
                "command": "notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "notebook.cell.split",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "cmd+k y",
                "command": "notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "cmd+/",
                "command": "notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "cmd+f",
                "command": "notebook.find",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "cmd+end",
                "command": "notebook.focusBottom",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "notebook.focusBottom",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "cmd+home",
                "command": "notebook.focusTop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "notebook.focusTop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "left",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "alt+cmd+[",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+alt+f",
                "command": "notebook.format",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "notebook.hideFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "shift+cmd+l",
                "command": "notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "alt+cmd+]",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+cmd+a",
                "command": "notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "notification.clear",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "notification.collapse",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "notification.expand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "cmd+k shift+cmd+n",
                "command": "notifications.showList",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "escape",
                "command": "problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "cmd+c",
                "command": "problems.action.copy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "cmd+f",
                "command": "problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "cmd+down",
                "command": "problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "cmd+down",
                "command": "problems.action.open",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemFocus)"
            },
            {
                "key": "enter",
                "command": "problems.action.open",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "problems.action.openToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemFocus)"
            },
            {
                "key": "cmd+.",
                "command": "problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+alt+cmd+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+down",
                "command": "quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+down",
                "command": "quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+down",
                "command": "quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+cmd+up",
                "command": "quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+cmd+up",
                "command": "quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "cmd+up",
                "command": "quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+cmd+r",
                "command": "revealFileInOS",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorFocus)"
            },
            {
                "key": "cmd+down",
                "command": "revealReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "revealReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "alt+cmd+s",
                "command": "saveAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+enter",
                "command": "scm.acceptInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "scm.clearInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmRepository)"
            },
            {
                "key": "down",
                "command": "scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "search.action.cancel",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "cmd+c",
                "command": "search.action.copyMatch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "search.action.copyPath",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "cmd+up",
                "command": "search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "search.action.openInEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "cmd+down",
                "command": "search.action.openResult",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "enter",
                "command": "search.action.openResult",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+backspace",
                "command": "search.action.remove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "search.action.replace",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "search.action.replaceAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+enter",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+cmd+1",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+i",
                "command": "search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "cmd+down",
                "command": "search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "cmd+up",
                "command": "search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "shift+cmd+l",
                "command": "selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSettingsEditor)"
            },
            {
                "key": "cmd+; cmd+x",
                "command": "testing.cancelRun",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; shift+cmd+a",
                "command": "testing.coverageAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; shift+cmd+c",
                "command": "testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; shift+cmd+f",
                "command": "testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; shift+cmd+l",
                "command": "testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+a",
                "command": "testing.debugAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+c",
                "command": "testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+f",
                "command": "testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+e",
                "command": "testing.debugFailTests",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+l",
                "command": "testing.debugLastRun",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+m",
                "command": "testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; e",
                "command": "testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; l",
                "command": "testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+r",
                "command": "testing.refreshTests",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (testing.canRefresh)"
            },
            {
                "key": "cmd+; a",
                "command": "testing.runAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; c",
                "command": "testing.runAtCursor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; f",
                "command": "testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus)"
            },
            {
                "key": "cmd+; cmd+o",
                "command": "testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (testing.hasAnyResults)"
            },
            {
                "key": "cmd+; shift+cmd+i",
                "command": "testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+; cmd+i",
                "command": "testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+h",
                "command": "testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (testing.isPeekVisible)"
            },
            {
                "key": "alt+cmd+c",
                "command": "toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (searchViewletFocus && !fileMatchOrFolderMatchFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+l",
                "command": "toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+cmd+r",
                "command": "toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+cmd+p",
                "command": "toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+cmd+r",
                "command": "toggleSearchRegex",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+cmd+w",
                "command": "toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+cmd+n",
                "command": "welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+down",
                "command": "widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "cmd+up",
                "command": "widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "alt+cmd+/",
                "command": "workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "cmd+escape",
                "command": "workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "cmd+down",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "cmd+up",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "cmd+i",
                "command": "workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+f9",
                "command": "workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+cmd+i",
                "command": "workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "shift+cmd+i",
                "command": "workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "alt+cmd+.",
                "command": "workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "shift+cmd+f9",
                "command": "workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+backspace",
                "command": "workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+cmd+/",
                "command": "workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "ctrl+alt+/",
                "command": "workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "shift+cmd+enter",
                "command": "workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "cmd+i",
                "command": "workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "cmd+i",
                "command": "workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "cmd+backspace",
                "command": "workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "cmd+w",
                "command": "workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+w",
                "command": "workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k shift+cmd+w",
                "command": "workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k w",
                "command": "workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k f",
                "command": "workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "cmd+w",
                "command": "workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "alt+cmd+t",
                "command": "workbench.action.closeOtherEditors",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen)"
            },
            {
                "key": "cmd+k u",
                "command": "workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+w",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+w",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!editorIsOpen && !multipleEditorGroups)"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "cmd+k shift+o",
                "command": "workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "cmd+k o",
                "command": "workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "shift+cmd+f5",
                "command": "workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "cmd+f11",
                "command": "workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "cmd+k m",
                "command": "workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!notebookEditorFocused)"
            },
            {
                "key": "alt+cmd+v",
                "command": "workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "cmd+k p",
                "command": "workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+n",
                "command": "workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+o",
                "command": "workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (false)"
            },
            {
                "key": "cmd+o",
                "command": "workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "cmd+o",
                "command": "workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "cmd+o",
                "command": "workbench.action.files.openLocalFileFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "cmd+k r",
                "command": "workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+s",
                "command": "workbench.action.files.save",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+s",
                "command": "workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+s",
                "command": "workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "cmd+k s",
                "command": "workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+f",
                "command": "workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+up",
                "command": "workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+down",
                "command": "workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+8",
                "command": "workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+5",
                "command": "workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+1",
                "command": "workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+4",
                "command": "workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+left",
                "command": "workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "f6",
                "command": "workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+f6",
                "command": "workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+right",
                "command": "workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+2",
                "command": "workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+7",
                "command": "workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+0",
                "command": "workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+6",
                "command": "workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+3",
                "command": "workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+o",
                "command": "workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (sideBySideEditorActive)"
            },
            {
                "key": "cmd+k enter",
                "command": "workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+r",
                "command": "workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+9",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+0",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k down",
                "command": "workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k left",
                "command": "workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k right",
                "command": "workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k up",
                "command": "workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k shift+cmd+left",
                "command": "workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k shift+cmd+right",
                "command": "workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+cmd+1",
                "command": "workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+cmd+9",
                "command": "workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+cmd+left",
                "command": "workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "browserback",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (canNavigateBack)"
            },
            {
                "key": "ctrl+-",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (canNavigateForward)"
            },
            {
                "key": "ctrl+shift+-",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (canNavigateForward)"
            },
            {
                "key": "cmd+k cmd+q",
                "command": "workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+n",
                "command": "workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+]",
                "command": "workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+cmd+right",
                "command": "workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k alt+cmd+right",
                "command": "workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+1",
                "command": "workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+2",
                "command": "workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+3",
                "command": "workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+4",
                "command": "workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+5",
                "command": "workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+6",
                "command": "workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+7",
                "command": "workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+8",
                "command": "workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+9",
                "command": "workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+s",
                "command": "workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+,",
                "command": "workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+u",
                "command": "workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.panel.output.active)"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!activeEditorIsPinned)"
            },
            {
                "key": "shift+cmd+[",
                "command": "workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+cmd+left",
                "command": "workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k alt+cmd+left",
                "command": "workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+p",
                "command": "workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+q",
                "command": "workbench.action.quickOpenView",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+alt+cmd+l",
                "command": "workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled)"
            },
            {
                "key": "cmd+q",
                "command": "workbench.action.quit",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+cmd+o",
                "command": "workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+t",
                "command": "workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+h",
                "command": "workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+j",
                "command": "workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "cmd+k cmd+t",
                "command": "workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+cmd+tab",
                "command": "workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+t",
                "command": "workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "f1",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+p",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+\\",
                "command": "workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k shift+cmd+\\",
                "command": "workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k cmd+\\",
                "command": "workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.switchWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+b",
                "command": "workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+cmd+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "cmd+r",
                "command": "workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "cmd+enter",
                "command": "workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "cmd+enter",
                "command": "workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "shift+cmd+,",
                "command": "workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+c",
                "command": "workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "cmd+g",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+g",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "cmd+down",
                "command": "workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "cmd+up",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "alt+f2",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "cmd+f",
                "command": "workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "cmd+k cmd+i",
                "command": "workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "shift+cmd+]",
                "command": "workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "shift+cmd+[",
                "command": "workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "shift+cmd+\\",
                "command": "workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+g",
                "command": "workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+w",
                "command": "workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "shift+cmd+c",
                "command": "workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!terminalFocus)"
            },
            {
                "key": "cmd+v",
                "command": "workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+cmd+down",
                "command": "workbench.action.terminal.resizePaneDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+left",
                "command": "workbench.action.terminal.resizePaneLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "workbench.action.terminal.resizePaneRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+cmd+up",
                "command": "workbench.action.terminal.resizePaneUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "cmd+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "alt+cmd+pagedown",
                "command": "workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+end",
                "command": "workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+end",
                "command": "workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "cmd+down",
                "command": "workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "cmd+up",
                "command": "workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "cmd+home",
                "command": "workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+home",
                "command": "workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+cmd+pageup",
                "command": "workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "cmd+a",
                "command": "workbench.action.terminal.selectAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+down",
                "command": "workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+cmd+up",
                "command": "workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "shift+cmd+right",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~d"
                }
            },
            {
                "key": "shift+cmd+left",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[1;2H"
                }
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001bf"
                }
            },
            {
                "key": "alt+left",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001bb"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "alt+backspace",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "alt+delete",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "cmd+backspace",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0015"
                }
            },
            {
                "key": "cmd+left",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0001"
                }
            },
            {
                "key": "cmd+right",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0005"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "cmd+.",
                "command": "workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "cmd+\\",
                "command": "workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "cmd+\\",
                "command": "workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!textInputFocus)"
            },
            {
                "key": "alt+cmd+c",
                "command": "workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+cmd+r",
                "command": "workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+cmd+w",
                "command": "workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminal.active)"
            },
            {
                "key": "alt+cmd+b",
                "command": "workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "alt+cmd+0",
                "command": "workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "ctrl+cmd+f",
                "command": "workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!isIOS)"
            },
            {
                "key": "cmd+k cmd+m",
                "command": "workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "cmd+j",
                "command": "workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+b",
                "command": "workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k z",
                "command": "workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "cmd+k shift+enter",
                "command": "workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (activeEditorIsPinned)"
            },
            {
                "key": "cmd+numpad_add",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+numpad_subtract",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+-",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+-",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+numpad0",
                "command": "workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "shift+cmd+m",
                "command": "workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "workbench.actions.workbench.panel.output.clearFilterText",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (outputFilterFocus)"
            },
            {
                "key": "escape",
                "command": "workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (bannerFocused)"
            },
            {
                "key": "shift+cmd+y",
                "command": "workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.panel.repl.view.active)"
            },
            {
                "key": "cmd+c",
                "command": "workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "cmd+k c",
                "command": "workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k d",
                "command": "workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "cmd+k e",
                "command": "workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+cmd+i",
                "command": "workbench.panel.chat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (statusBarFocused)"
            },
            {
                "key": "shift+cmd+d",
                "command": "workbench.view.debug",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "shift+cmd+e",
                "command": "workbench.view.explorer",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "shift+cmd+x",
                "command": "workbench.view.extensions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "workbench.view.scm",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.scm.active)"
            },
            {
                "key": "shift+cmd+f",
                "command": "workbench.view.search",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "alt+right",
                "command": "breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+left",
                "command": "breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "cmd+y",
                "command": "chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "cmd+n",
                "command": "chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "cmd+i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "alt+cmd+f",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "cmd+a",
                "command": "notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "cmd+/",
                "command": "terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+k down",
                "command": "views.moveViewDown",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView != '')"
            },
            {
                "key": "cmd+k left",
                "command": "views.moveViewLeft",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView != '')"
            },
            {
                "key": "cmd+k right",
                "command": "views.moveViewRight",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView != '')"
            },
            {
                "key": "cmd+k up",
                "command": "views.moveViewUp",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView != '')"
            },
            {
                "key": "cmd+enter",
                "command": "workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "cmd+n",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "shift+cmd+]",
                "command": "workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugRepl)"
            },
            {
                "key": "shift+cmd+[",
                "command": "workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inDebugRepl)"
            },
            {
                "key": "cmd+n",
                "command": "workbench.action.openChat",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "cmd+k",
                "command": "workbench.action.terminal.clear",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+cmd+down",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+right",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+up",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+cmd+left",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "shift+cmd+o",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "shift+cmd+g",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "shift+cmd+l",
                "command": "workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+k",
                "command": "workbench.debug.panel.action.clearReplAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "enter",
                "command": "debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (watchExpressionsFocused)"
            },
            {
                "key": "enter",
                "command": "debug.setVariable",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (mostRecentReplEditor)"
            },
            {
                "key": "cmd+v",
                "command": "filesExplorer.paste",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "shift+cmd+y",
                "command": "chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "alt+cmd+y",
                "command": "chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+cmd+n",
                "command": "chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "alt+cmd+backspace",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "shift+cmd+.",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "shift+cmd+o",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "cmd+e",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.macOSKeybindings"
            },
            {
                "key": "escape",
                "command": "editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "cmd+down",
                "command": "explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+c",
                "command": "filesExplorer.copy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "cmd+x",
                "command": "filesExplorer.cut",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "firstCompressedFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "cmd+enter",
                "command": "inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+cmd+y",
                "command": "inlineChat2.keep",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+cmd+n",
                "command": "inlineChat2.undo",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "lastCompressedFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "shift+cmd+t",
                "command": "mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "moveFileToTrash",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "moveFileToTrash",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "nextCompressedFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "previousCompressedFolder",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "cmd+backspace",
                "command": "remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "cmd+c",
                "command": "remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "enter",
                "command": "remote.tunnel.label",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "enter",
                "command": "renameFile",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "cmd+up",
                "command": "list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "left",
                "command": "list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "cmd+down",
                "command": "list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "notifications.hideList",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+cmd+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+cmd+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+cmd+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "cmd+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+-",
                "command": "workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "cmd+p",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+q",
                "command": "workbench.action.quickOpenNavigateNextInViewPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "shift+cmd+p",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+q",
                "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.quickOpenSelectNext",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenSelectPrevious",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (inQuickOpen)"
            },
            {
                "key": "cmd+r",
                "command": "workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isDevelopment)"
            },
            {
                "key": "shift+cmd+f",
                "command": "workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "alt+cmd+i",
                "command": "workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "cmd+k alt+cmd+s",
                "command": "git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+cmd+v",
                "command": "markdown.showPreview",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "references-view.findReferences",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "cmd+k cmd+n",
                "command": "git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "cmd+k v",
                "command": "markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "references-view.next",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "cmd+k cmd+r",
                "command": "git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "references-view.prev",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "cmd+i",
                "command": "workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "cmd+i",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "cmd+.",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+enter",
                "command": "previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "cmd+up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.macOSKeybindings && (comparingMovedCode)"
            },
            {
                "key": "escape escape",
                "command": "workbench.action.exitZenMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inZenMode)"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "escape",
                "command": "editor.closeTestPeek",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek)"
            },
            {
                "key": "shift+escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "cancelSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasSelection && textInputFocus)"
            },
            {
                "key": "ctrl+end",
                "command": "cursorBottom",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+end",
                "command": "cursorBottomSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+down",
                "command": "cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+left",
                "command": "cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+pagedown",
                "command": "cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+pageup",
                "command": "cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+right",
                "command": "cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+alt+up",
                "command": "cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "down",
                "command": "cursorDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "cursorDownSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+down",
                "command": "cursorDownSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "end",
                "command": "cursorEnd",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "shift+end",
                "command": "cursorEndSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)",
                "args": {
                    "sticky": false
                }
            },
            {
                "key": "home",
                "command": "cursorHome",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+home",
                "command": "cursorHomeSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "left",
                "command": "cursorLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorLeftSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "pagedown",
                "command": "cursorPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "pageup",
                "command": "cursorPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "right",
                "command": "cursorRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorRightSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+home",
                "command": "cursorTop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+home",
                "command": "cursorTopSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "up",
                "command": "cursorUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "cursorUpSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorUpSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "shift+backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "backspace",
                "command": "deleteLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "delete",
                "command": "deleteRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+a",
                "command": "editor.action.selectAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+l",
                "command": "expandLineSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.arrowOutDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "inlineChat.arrowOutUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor)"
            },
            {
                "key": "shift+tab",
                "command": "outdent",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+z",
                "command": "redo",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+y",
                "command": "redo",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+down",
                "command": "scrollLineDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "scrollLineUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+pagedown",
                "command": "scrollPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "alt+pageup",
                "command": "scrollPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "tab",
                "command": "tab",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+z",
                "command": "undo",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+down",
                "command": "cursorColumnSelectDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+left",
                "command": "cursorColumnSelectLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pagedown",
                "command": "cursorColumnSelectPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+pageup",
                "command": "cursorColumnSelectPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+right",
                "command": "cursorColumnSelectRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+up",
                "command": "cursorColumnSelectUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorColumnSelection && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "removeSecondaryCursors",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasMultipleSelections && textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.arrowOutDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.arrowOutUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.focusChatWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.focusNextChatWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "inlineChat.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused)"
            },
            {
                "key": "down",
                "command": "notebook.cell.chat.nextFromHistory",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.chat.previousFromHistory",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "f12",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "f4",
                "command": "goToNextReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f12",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "shift+f4",
                "command": "goToPreviousReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "inlineChat.hideHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatShowingHint)"
            },
            {
                "key": "ctrl+enter",
                "command": "refactorPreview.apply",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview')"
            },
            {
                "key": "alt+enter",
                "command": "testing.editFocusedTest",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView == 'workbench.view.testing')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup')"
            },
            {
                "key": "escape",
                "command": "workbench.edit.chat.cancel",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatSessionCurrentlyEditing && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible || chatSessionCurrentlyEditingInput && inChatInput && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "actions.find",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "enter",
                "command": "breakpointWidget.action.acceptInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointWidgetVisible && inBreakpointWidget)"
            },
            {
                "key": "ctrl+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatCursorAtTop && inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "closeBreakpointWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+u",
                "command": "cursorUndo",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordEndRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+right",
                "command": "cursorWordEndRightSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+shift+left",
                "command": "cursorWordLeftSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+backspace",
                "command": "deleteWordLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+delete",
                "command": "deleteWordRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "f7",
                "command": "editor.action.accessibleDiffViewer.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isInDiffEditor)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.accessibleDiffViewer.prev",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isInDiffEditor)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "editor.action.addCommentLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+d",
                "command": "editor.action.addSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+.",
                "command": "editor.action.autoFix",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/)"
            },
            {
                "key": "shift+alt+a",
                "command": "editor.action.blockComment",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "editor.action.cancelSelectionAnchor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+f2",
                "command": "editor.action.changeAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+insert",
                "command": "editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+c",
                "command": "editor.action.clipboardCopyAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+delete",
                "command": "editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+x",
                "command": "editor.action.clipboardCutAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+insert",
                "command": "editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+v",
                "command": "editor.action.clipboardPasteAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+/",
                "command": "editor.action.commentLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+down",
                "command": "editor.action.copyLinesDownAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "shift+alt+up",
                "command": "editor.action.copyLinesUpAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+k",
                "command": "editor.action.deleteLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !editorReadonly)"
            },
            {
                "key": "alt+f3",
                "command": "editor.action.dirtydiff.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "shift+alt+f3",
                "command": "editor.action.dirtydiff.previous",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !textCompareEditorActive)"
            },
            {
                "key": "enter",
                "command": "editor.action.extensioneditor.findNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.extensioneditor.findPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "ctrl+f",
                "command": "editor.action.extensioneditor.showfind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!editorFocus && activeEditor == 'workbench.editor.extension')"
            },
            {
                "key": "shift+alt+f",
                "command": "editor.action.formatDocument",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor)"
            },
            {
                "key": "shift+alt+f",
                "command": "editor.action.formatDocument.none",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+f",
                "command": "editor.action.formatSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "end",
                "command": "editor.action.goToBottomHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "enter",
                "command": "editor.action.goToFocusedStickyScrollLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+f12",
                "command": "editor.action.goToImplementation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasImplementationProvider && editorTextFocus)"
            },
            {
                "key": "shift+f12",
                "command": "editor.action.goToReferences",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "home",
                "command": "editor.action.goToTopHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.hideColorPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (standaloneColorPickerVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "editor.action.inPlaceReplace.down",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "editor.action.inPlaceReplace.up",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+]",
                "command": "editor.action.indentLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.inlineSuggest.showNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "alt+[",
                "command": "editor.action.inlineSuggest.showPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineSuggestionVisible && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.insertColorWithStandaloneColorPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (standaloneColorPickerFocused)"
            },
            {
                "key": "ctrl+alt+up",
                "command": "editor.action.insertCursorAbove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+i",
                "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+alt+down",
                "command": "editor.action.insertCursorBelow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "editor.action.insertLineAfter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "editor.action.insertLineBefore",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "editor.action.jumpToBracket",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+shift+f2",
                "command": "editor.action.linkedEditing",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+f8",
                "command": "editor.action.marker.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "f8",
                "command": "editor.action.marker.nextInFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+f8",
                "command": "editor.action.marker.prev",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "shift+f8",
                "command": "editor.action.marker.prevInFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.moveLinesDownAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.moveLinesUpAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+k ctrl+d",
                "command": "editor.action.moveSelectionToNextFindMatch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+f9",
                "command": "editor.action.nextCommentThreadAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+f10",
                "command": "editor.action.nextCommentedRangeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+down",
                "command": "editor.action.nextCommentingRange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "f3",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "enter",
                "command": "editor.action.nextMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+f3",
                "command": "editor.action.nextSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "shift+alt+o",
                "command": "editor.action.organizeImports",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/)"
            },
            {
                "key": "ctrl+[",
                "command": "editor.action.outdentLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "alt+down",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pagedown",
                "command": "editor.action.pageDownHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "alt+up",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "pageup",
                "command": "editor.action.pageUpHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "alt+f12",
                "command": "editor.action.peekDefinition",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+shift+f12",
                "command": "editor.action.peekImplementation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor)"
            },
            {
                "key": "shift+alt+f9",
                "command": "editor.action.previousCommentThreadAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+alt+f10",
                "command": "editor.action.previousCommentedRangeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorHasCommentingRange)"
            },
            {
                "key": "ctrl+k ctrl+alt+up",
                "command": "editor.action.previousCommentingRange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments')"
            },
            {
                "key": "shift+f3",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.previousMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findInputFocussed)"
            },
            {
                "key": "ctrl+shift+f3",
                "command": "editor.action.previousSelectionMatchFindAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.action.quickFix",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "editor.action.refactor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
            },
            {
                "key": "ctrl+alt+backspace",
                "command": "editor.action.removeBrackets",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+u",
                "command": "editor.action.removeCommentLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f2",
                "command": "editor.action.rename",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasRenameProvider && editorTextFocus && !editorReadonly)"
            },
            {
                "key": "f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDefinitionProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+f12",
                "command": "editor.action.revealDefinition",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb)"
            },
            {
                "key": "ctrl+k f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
            },
            {
                "key": "ctrl+k ctrl+f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor)"
            },
            {
                "key": "down",
                "command": "editor.action.scrollDownHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "left",
                "command": "editor.action.scrollLeftHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "right",
                "command": "editor.action.scrollRightHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.scrollUpHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHoverFocused)"
            },
            {
                "key": "escape",
                "command": "editor.action.selectEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "editor.action.selectFromAnchorToCursor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && selectionAnchorSet)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "editor.action.selectHighlights",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "down",
                "command": "editor.action.selectNextStickyScrollLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "editor.action.selectPreviousStickyScrollLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (stickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+b",
                "command": "editor.action.setSelectionAnchor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+f10",
                "command": "editor.action.showContextMenu",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textInputFocus)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "editor.action.showHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+right",
                "command": "editor.action.smartSelect.expand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+left",
                "command": "editor.action.smartSelect.shrink",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+h",
                "command": "editor.action.startFindReplaceAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus || editorIsOpen)"
            },
            {
                "key": "ctrl+enter",
                "command": "editor.action.submitComment",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (commentEditorFocused)"
            },
            {
                "key": "ctrl+m",
                "command": "editor.action.toggleTabFocusMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+z",
                "command": "editor.action.toggleWordWrap",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+space",
                "command": "editor.action.triggerParameterHints",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasSignatureHelpProvider && editorTextFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "editor.action.triggerSuggest",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+x",
                "command": "editor.action.trimTrailingWhitespace",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !editorReadonly)"
            },
            {
                "key": "enter",
                "command": "editor.action.webvieweditor.findNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "shift+enter",
                "command": "editor.action.webvieweditor.findPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "escape",
                "command": "editor.action.webvieweditor.hideFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "editor.action.webvieweditor.showFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor')"
            },
            {
                "key": "f7",
                "command": "editor.action.wordHighlight.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "shift+f7",
                "command": "editor.action.wordHighlight.prev",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && hasWordHighlights)"
            },
            {
                "key": "escape",
                "command": "editor.cancelOperation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cancellableOperation)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.changeDropType",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "editor.changePasteType",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+,",
                "command": "editor.createFoldingRangeFromSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "editor.debug.action.closeExceptionWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (exceptionWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "editor.debug.action.showDebugHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inDebugMode)"
            },
            {
                "key": "f9",
                "command": "editor.debug.action.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus)"
            },
            {
                "key": "tab",
                "command": "editor.emmet.action.expandAbbreviation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus)"
            },
            {
                "key": "ctrl+shift+[",
                "command": "editor.fold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+0",
                "command": "editor.foldAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+/",
                "command": "editor.foldAllBlockComments",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+-",
                "command": "editor.foldAllExcept",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+8",
                "command": "editor.foldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+1",
                "command": "editor.foldLevel1",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+2",
                "command": "editor.foldLevel2",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+3",
                "command": "editor.foldLevel3",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+4",
                "command": "editor.foldLevel4",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+5",
                "command": "editor.foldLevel5",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+6",
                "command": "editor.foldLevel6",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+7",
                "command": "editor.foldLevel7",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+[",
                "command": "editor.foldRecursively",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "f12",
                "command": "editor.gotoNextSymbolFromResult",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.gotoNextSymbolFromResult.cancel",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSymbols)"
            },
            {
                "key": "escape",
                "command": "editor.hideDropWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (dropWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "editor.hidePasteWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (pasteWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+.",
                "command": "editor.removeManualFoldingRanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "editor.toggleFold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+shift+l",
                "command": "editor.toggleFoldRecursively",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+shift+]",
                "command": "editor.unfold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "editor.unfoldAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+=",
                "command": "editor.unfoldAllExcept",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+9",
                "command": "editor.unfoldAllMarkerRegions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "ctrl+k ctrl+]",
                "command": "editor.unfoldRecursively",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && foldingEnabled)"
            },
            {
                "key": "escape",
                "command": "inlayHints.stopReadingLineWithHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isReadingLineWithInlayHints)"
            },
            {
                "key": "escape",
                "command": "inlineChat.discardHunkChange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits')"
            },
            {
                "key": "tab",
                "command": "insertSnippet",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode)"
            },
            {
                "key": "ctrl+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "shift+enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "interactive.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+enter",
                "command": "mergeEditor.acceptMerge",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isMergeEditor)"
            },
            {
                "key": "escape",
                "command": "notebook.cell.chat.discard",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit)"
            },
            {
                "key": "pagedown",
                "command": "notebook.cell.cursorPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pagedown",
                "command": "notebook.cell.cursorPageDownSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "pageup",
                "command": "notebook.cell.cursorPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused)"
            },
            {
                "key": "shift+pageup",
                "command": "notebook.cell.cursorPageUpSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "notebook.cell.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "alt+enter",
                "command": "notebook.cell.executeAndInsertBelow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "shift+enter",
                "command": "notebook.cell.executeAndSelectBelow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "notebook.cell.pasteAbove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'end' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'both' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none' || config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtLineBoundary == 'start' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none')"
            },
            {
                "key": "shift+alt+f",
                "command": "notebook.formatCell",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+enter",
                "command": "openReferenceToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "repl.action.acceptInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "repl.action.filter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugRepl && textInputFocus)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "repl.action.find",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "shift+enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "enter",
                "command": "repl.execute",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl')"
            },
            {
                "key": "alt+end alt+end",
                "command": "repl.focusLastItemExecuted",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "rerunSearchEditorSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "search.action.focusQueryEditorWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "ctrl+shift+backspace",
                "command": "search.searchEditor.action.deleteFileResults",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.clearSearchResults",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor && inSettingsSearch)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+f",
                "command": "settings.action.search",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "settings.action.toggleAiSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+/",
                "command": "toggleExplainMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k f2",
                "command": "togglePeekWidgetFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inReferenceSearchEditor || referenceSearchVisible)"
            },
            {
                "key": "escape",
                "command": "welcome.goBack",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inWelcome && activeEditor == 'gettingStartedPage')"
            },
            {
                "key": "ctrl+k ctrl+alt+c",
                "command": "workbench.action.addComment",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeCursorHasCommentingRange)"
            },
            {
                "key": "ctrl+/",
                "command": "workbench.action.chat.attachContext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+.",
                "command": "workbench.action.chat.openModePicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChatInput && chatLocation == 'panel')"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.chat.runInTerminal",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat)"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.submit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.submitWithCodebase",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "shift+alt+enter",
                "command": "workbench.action.chat.submitWithoutDispatching",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask' || chatPromptFileAttached && chatRequestIsPaused && inChatInput && chatMode == 'ask' || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress && chatMode == 'ask')"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.editor.nextChange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.editor.previousChange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0')"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "escape",
                "command": "workbench.action.hideComment",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (commentEditorFocused || commentFocused)"
            },
            {
                "key": "ctrl+right",
                "command": "editor.action.inlineSuggest.acceptNextWord",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly)"
            },
            {
                "key": "escape",
                "command": "inlineChat.close",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "alt+f8",
                "command": "testing.goToNextMessage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+alt+f8",
                "command": "testing.goToPreviousMessage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && testing.isPeekVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "escape",
                "command": "closeFindWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible && !isComposing)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "editor.action.replaceAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "editor.action.replaceOne",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible && replaceInputFocussed)"
            },
            {
                "key": "alt+enter",
                "command": "editor.action.selectAllMatches",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && findWidgetVisible)"
            },
            {
                "key": "alt+c",
                "command": "toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+l",
                "command": "toggleFindInSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+r",
                "command": "toggleFindRegex",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "alt+p",
                "command": "togglePreserveCase",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "tab",
                "command": "jumpToNextSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasNextTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+tab",
                "command": "jumpToPrevSnippetPlaceholder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasPrevTabstop && inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveEditorMessage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (messageVisible)"
            },
            {
                "key": "shift+escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "leaveSnippet",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSnippetMode && textInputFocus)"
            },
            {
                "key": "shift+escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "escape",
                "command": "closeMarkersNavigation",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && markersNavigationVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "closeQuickDiff",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (dirtyDiffVisible)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationToastsVisible)"
            },
            {
                "key": "shift+escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "escape",
                "command": "closeParameterHints",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsVisible)"
            },
            {
                "key": "alt+down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "down",
                "command": "showNextParameterHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "alt+up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "up",
                "command": "showPrevParameterHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible)"
            },
            {
                "key": "shift+tab",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "shift+enter",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "editor.action.inlineSuggest.hide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineEditIsVisible || inlineSuggestionVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+space",
                "command": "focusSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "shift+escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "escape",
                "command": "hideSuggestWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "tab",
                "command": "insertBestCompletion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "tab",
                "command": "insertNextSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "shift+tab",
                "command": "insertPrevSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pagedown",
                "command": "selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "down",
                "command": "selectNextSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "pageup",
                "command": "selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "up",
                "command": "selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion)"
            },
            {
                "key": "ctrl+i",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+space",
                "command": "toggleSuggestionDetails",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "toggleSuggestionFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (suggestWidgetVisible && textInputFocus)"
            },
            {
                "key": "enter",
                "command": "acceptRenameInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "ctrl+enter",
                "command": "acceptRenameInputWithPreview",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing)"
            },
            {
                "key": "shift+escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "escape",
                "command": "cancelLinkedEditingInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (LinkedEditingInputVisible && editorTextFocus)"
            },
            {
                "key": "shift+escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "escape",
                "command": "cancelRenameInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && renameInputVisible)"
            },
            {
                "key": "down",
                "command": "focusNextRenameSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (renameInputVisible)"
            },
            {
                "key": "up",
                "command": "focusPreviousRenameSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (renameInputVisible)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "workbench.action.showHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!editorTextFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "addCursorsAtSearchResults",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+;",
                "command": "breadcrumbs.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "breadcrumbs.focusAndSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsPossible && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "right",
                "command": "breadcrumbs.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "left",
                "command": "breadcrumbs.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "space",
                "command": "breadcrumbs.revealFocused",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "breadcrumbs.revealFocusedFromTreeAside",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "enter",
                "command": "breadcrumbs.selectFocused",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "breadcrumbs.toggleToOn",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!config.breadcrumbs.enabled)"
            },
            {
                "key": "ctrl+down",
                "command": "chat.action.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && inChatInput && quickChatHasFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "chat.inlineResourceAnchor.copyResource",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+enter",
                "command": "chatEditing.acceptAllFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+backspace",
                "command": "chatEditing.discardAllFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress)"
            },
            {
                "key": "alt+f5",
                "command": "chatEditor.action.navigateNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "shift+alt+f5",
                "command": "chatEditor.action.navigatePrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused)"
            },
            {
                "key": "f7",
                "command": "chatEditor.action.showAccessibleDiffView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+alt+f7",
                "command": "chatEditor.action.toggleDiff",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus)"
            },
            {
                "key": "escape",
                "command": "closeReplaceInFilesWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (replaceInputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "escape",
                "command": "commentsClearFilterText",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "commentsFocusFilter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView == 'workbench.panel.comments')"
            },
            {
                "key": "ctrl+down",
                "command": "commentsFocusViewFromFilter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (commentsFilterFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!editorFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "copyFilePath",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!editorFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+c",
                "command": "copyRelativeFilePath",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus)"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordAccessibilityLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+left",
                "command": "cursorWordAccessibilityLeftSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordAccessibilityRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+shift+right",
                "command": "cursorWordAccessibilityRightSelect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output')"
            },
            {
                "key": "ctrl+alt+c",
                "command": "debug.copyWatchExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "alt+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointsFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "debug.openBreakpointToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointsFocused)"
            },
            {
                "key": "ctrl+f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "f5",
                "command": "debug.openView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!debuggersAvailable)"
            },
            {
                "key": "delete",
                "command": "debug.removeBreakpoint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointsFocused && !breakpointInputFocused)"
            },
            {
                "key": "delete",
                "command": "debug.removeWatchExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (watchExpressionsFocused && !expressionSelected)"
            },
            {
                "key": "alt+-",
                "command": "decreaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+f1",
                "command": "editor.action.accessibilityHelp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!accessibilityHelpIsShown)"
            },
            {
                "key": "alt+a",
                "command": "editor.action.accessibilityHelpConfigureAssignedKeybindings",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings)"
            },
            {
                "key": "alt+k",
                "command": "editor.action.accessibilityHelpConfigureKeybindings",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings)"
            },
            {
                "key": "alt+h",
                "command": "editor.action.accessibilityHelpOpenHelpLink",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "alt+f2",
                "command": "editor.action.accessibleView",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+/",
                "command": "editor.action.accessibleViewAcceptInlineCompletion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions')"
            },
            {
                "key": "alt+f6",
                "command": "editor.action.accessibleViewDisableHint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled)"
            },
            {
                "key": "alt+]",
                "command": "editor.action.accessibleViewNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "editor.action.accessibleViewNextCodeBlock",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "alt+[",
                "command": "editor.action.accessibleViewPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && accessibleViewSupportsNavigation)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "editor.action.accessibleViewPreviousCodeBlock",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat')"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "editor.action.defineKeybinding",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (resource == 'vscode-userdata:/d%3A/a/vscode-default-keybindings/vscode-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json')"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "insert",
                "command": "editor.action.toggleOvertypeInsertMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+f9",
                "command": "editor.debug.action.toggleInlineBreakpoint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "shift+alt+d",
                "command": "editor.detectLanguage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !notebookEditable)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusCallHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (callHierarchyVisible)"
            },
            {
                "key": "shift+enter",
                "command": "editor.refocusTypeHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (typeHierarchyVisible)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showCallHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor)"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showIncomingCalls",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (callHierarchyVisible && callHierarchyDirection == 'outgoingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showOutgoingCalls",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (callHierarchyVisible && callHierarchyDirection == 'incomingCalls')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSubtypes",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'supertypes')"
            },
            {
                "key": "shift+alt+h",
                "command": "editor.showSupertypes",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (typeHierarchyVisible && typeHierarchyDirection == 'subtypes')"
            },
            {
                "key": "ctrl+enter",
                "command": "explorer.openToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerViewletFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "shift+alt+f",
                "command": "filesExplorer.findInFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "alt+down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "history.showNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "alt+up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "history.showPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "iconSelectBox.focusDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "right",
                "command": "iconSelectBox.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "left",
                "command": "iconSelectBox.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus)"
            },
            {
                "key": "up",
                "command": "iconSelectBox.focusUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "enter",
                "command": "iconSelectBox.selectFocused",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (iconSelectBoxFocus)"
            },
            {
                "key": "alt+=",
                "command": "increaseSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.holdForSpeech",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSpeechProvider && inlineChatVisible && textInputFocus)"
            },
            {
                "key": "f7",
                "command": "inlineChat.moveToNextHunk",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "shift+f7",
                "command": "inlineChat.moveToPreviousHunk",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+r",
                "command": "inlineChat.regenerate",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput)"
            },
            {
                "key": "ctrl+k i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "ctrl+z",
                "command": "inlineChat.unstash",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasStashedSession && !editorReadonly)"
            },
            {
                "key": "ctrl+down",
                "command": "inlineChat.viewInChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChatInput && inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "escape",
                "command": "inlineChat2.close",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0')"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat2.reveal",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1)"
            },
            {
                "key": "ctrl+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused)"
            },
            {
                "key": "down",
                "command": "interactive.history.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top')"
            },
            {
                "key": "up",
                "command": "interactive.history.previous",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "ctrl+end",
                "command": "interactive.scrollToBottom",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "ctrl+home",
                "command": "interactive.scrollToTop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditor == 'workbench.editor.interactive')"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.acceptWhenExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+k ctrl+a",
                "command": "keybindings.editor.addKeybinding",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.clearSearchResults",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "ctrl+c",
                "command": "keybindings.editor.copyKeybindingEntry",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "enter",
                "command": "keybindings.editor.defineKeybinding",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && keybindingFocus && !whenFocus)"
            },
            {
                "key": "ctrl+k ctrl+e",
                "command": "keybindings.editor.defineWhenExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && keybindingFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "keybindings.editor.focusKeybindings",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "alt+k",
                "command": "keybindings.editor.recordSearchKeys",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && inKeybindingsSearch)"
            },
            {
                "key": "escape",
                "command": "keybindings.editor.rejectWhenExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && whenFocus && !suggestWidgetVisible)"
            },
            {
                "key": "delete",
                "command": "keybindings.editor.removeKeybinding",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings && keybindingFocus && !inputFocus)"
            },
            {
                "key": "ctrl+f",
                "command": "keybindings.editor.searchKeybindings",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings)"
            },
            {
                "key": "alt+p",
                "command": "keybindings.editor.toggleSortByPrecedence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inKeybindings)"
            },
            {
                "key": "escape",
                "command": "list.clear",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "list.closeFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && treeFindOpen)"
            },
            {
                "key": "left",
                "command": "list.collapse",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "list.collapseAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "right",
                "command": "list.expand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+down",
                "command": "list.expandSelectionDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+up",
                "command": "list.expandSelectionUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "f3",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "ctrl+alt+f",
                "command": "list.find",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listSupportsFind)"
            },
            {
                "key": "alt+down",
                "command": "list.focusAnyDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+home",
                "command": "list.focusAnyFirst",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+end",
                "command": "list.focusAnyLast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "alt+up",
                "command": "list.focusAnyUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "down",
                "command": "list.focusDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "home",
                "command": "list.focusFirst",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "end",
                "command": "list.focusLast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pagedown",
                "command": "list.focusPageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "pageup",
                "command": "list.focusPageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "up",
                "command": "list.focusUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+down",
                "command": "list.scrollDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "list.scrollUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top')"
            },
            {
                "key": "enter",
                "command": "list.select",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "list.selectAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "list.showHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.toggleExpand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "list.toggleSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "backspace",
                "command": "noteMultiCursor.deleteLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "delete",
                "command": "noteMultiCursor.deleteRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2')"
            },
            {
                "key": "escape",
                "command": "noteMultiCursor.exit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+d",
                "command": "notebook.addFindMatchToSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+k m",
                "command": "notebook.cell.changeLanguage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "y",
                "command": "notebook.cell.changeToCode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup')"
            },
            {
                "key": "m",
                "command": "notebook.cell.changeToMarkdown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code')"
            },
            {
                "key": "enter",
                "command": "notebook.cell.chat.accept",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.chat.acceptChanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above')"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.chat.focusNextCell",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+up",
                "command": "notebook.cell.chat.focusPreviousCell",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatFocused && notebookCellChatFocused)"
            },
            {
                "key": "ctrl+k i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+i",
                "command": "notebook.cell.chat.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+delete",
                "command": "notebook.cell.clearOutputs",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "notebook.cell.collapseCellInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed)"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.collapseCellOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed)"
            },
            {
                "key": "shift+alt+down",
                "command": "notebook.cell.copyDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "shift+alt+up",
                "command": "notebook.cell.copyUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "notebook.cell.delete",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "shift+alt+d",
                "command": "notebook.cell.detectLanguage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellEditable && notebookEditable)"
            },
            {
                "key": "enter",
                "command": "notebook.cell.edit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "notebook.cell.expandCellInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellInputIsCollapsed && notebookCellListFocused)"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.expandCellOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && notebookCellOutputIsCollapsed)"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "notebook.cell.focusInOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellHasOutputs && notebookEditorFocused)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "notebook.cell.focusOutOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "notebook.cell.insertCodeCellAbove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.insertCodeCellBelow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == '')"
            },
            {
                "key": "shift+alt+win+j",
                "command": "notebook.cell.joinAbove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "alt+win+j",
                "command": "notebook.cell.joinBelow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "alt+down",
                "command": "notebook.cell.moveDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+up",
                "command": "notebook.cell.moveUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "notebook.cell.openFailureActions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "notebook.cell.split",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused)"
            },
            {
                "key": "ctrl+k y",
                "command": "notebook.cell.toggleOutputScrolling",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookCellHasOutputs && notebookCellListFocused && !inputFocus)"
            },
            {
                "key": "ctrl+l",
                "command": "notebook.centerActiveCell",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "notebook.commentSelectedCells",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditable && notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "alt+f3",
                "command": "notebook.diff.action.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "shift+alt+f3",
                "command": "notebook.diff.action.previous",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditor == 'workbench.editor.notebookTextDiffEditor')"
            },
            {
                "key": "ctrl+f",
                "command": "notebook.find",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+end",
                "command": "notebook.focusBottom",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+down",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup')"
            },
            {
                "key": "ctrl+home",
                "command": "notebook.focusTop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus)"
            },
            {
                "key": "left",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+[",
                "command": "notebook.fold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "shift+alt+f",
                "command": "notebook.format",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "escape",
                "command": "notebook.hideFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && notebookFindWidgetFocused)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "notebook.selectAllFindMatches",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "right",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+]",
                "command": "notebook.unfold",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook')"
            },
            {
                "key": "ctrl+shift+a",
                "command": "notification.acceptPrimaryAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus || notificationToastsVisible)"
            },
            {
                "key": "delete",
                "command": "notification.clear",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus)"
            },
            {
                "key": "left",
                "command": "notification.collapse",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus)"
            },
            {
                "key": "right",
                "command": "notification.expand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus)"
            },
            {
                "key": "enter",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus)"
            },
            {
                "key": "space",
                "command": "notification.toggle",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus)"
            },
            {
                "key": "home",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pageup",
                "command": "notifications.focusFirstToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "end",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "pagedown",
                "command": "notifications.focusLastToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "down",
                "command": "notifications.focusNextToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "up",
                "command": "notifications.focusPreviousToast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+n",
                "command": "notifications.showList",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "escape",
                "command": "problems.action.clearFilterText",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "problems.action.copy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+f",
                "command": "problems.action.focusFilter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView == 'workbench.panel.markers.view')"
            },
            {
                "key": "ctrl+down",
                "command": "problems.action.focusProblemsFromFilter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemsFilterFocus)"
            },
            {
                "key": "enter",
                "command": "problems.action.open",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "problems.action.openToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+.",
                "command": "problems.action.showQuickFixes",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (problemFocus)"
            },
            {
                "key": "ctrl+alt+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+home",
                "command": "quickInput.first",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+end",
                "command": "quickInput.last",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "down",
                "command": "quickInput.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+down",
                "command": "quickInput.nextSeparator",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+down",
                "command": "quickInput.nextSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pagedown",
                "command": "quickInput.pageNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "pageup",
                "command": "quickInput.pagePrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "up",
                "command": "quickInput.previous",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+alt+up",
                "command": "quickInput.previousSeparator",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "alt+up",
                "command": "quickInput.previousSeparatorWithQuickAccessFallback",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "ctrl+space",
                "command": "quickInput.toggleHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickInput && quickInputType == 'quickPick' || inQuickInput && quickInputType == 'quickTree')"
            },
            {
                "key": "space",
                "command": "refactorPreview.toggleCheckedState",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "shift+alt+r",
                "command": "revealFileInOS",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!editorFocus)"
            },
            {
                "key": "enter",
                "command": "revealReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+k s",
                "command": "saveAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+enter",
                "command": "scm.acceptInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmRepository)"
            },
            {
                "key": "escape",
                "command": "scm.clearInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmRepository && !editorHasSelection && !suggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "scm.forceViewNextCommit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmRepository)"
            },
            {
                "key": "alt+up",
                "command": "scm.forceViewPreviousCommit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmRepository)"
            },
            {
                "key": "down",
                "command": "scm.viewNextCommit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "scm.viewPreviousCommit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible)"
            },
            {
                "key": "escape",
                "command": "search.action.cancel",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0')"
            },
            {
                "key": "ctrl+c",
                "command": "search.action.copyMatch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrMatchFocus)"
            },
            {
                "key": "shift+alt+c",
                "command": "search.action.copyPath",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrFolderMatchWithResourceFocus)"
            },
            {
                "key": "f4",
                "command": "search.action.focusNextSearchResult",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "shift+f4",
                "command": "search.action.focusPreviousSearchResult",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSearchResult || inSearchEditor)"
            },
            {
                "key": "ctrl+up",
                "command": "search.action.focusSearchFromResults",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible)"
            },
            {
                "key": "alt+enter",
                "command": "search.action.openInEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSearchResult && searchViewletFocus)"
            },
            {
                "key": "enter",
                "command": "search.action.openResult",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "search.action.openResultToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "delete",
                "command": "search.action.remove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchOrMatchFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replace",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isEditableItem && matchFocus && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "search.action.replaceAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (replaceActive && searchViewletVisible && !findWidgetVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replaceAllInFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "ctrl+shift+1",
                "command": "search.action.replaceAllInFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible)"
            },
            {
                "key": "shift+alt+f",
                "command": "search.action.restrictSearchToFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (folderMatchWithResourceFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "search.action.searchWithAI",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasAIResultProviderKey && searchViewletFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "search.focus.nextInputBox",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "search.focus.previousInputBox",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "selectAllSearchEditorMatches",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "escape",
                "command": "settings.action.focusLevelUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingControl",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "down",
                "command": "settings.action.focusSettingsFromSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsSearch && !suggestWidgetVisible)"
            },
            {
                "key": "enter",
                "command": "settings.action.focusSettingsList",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor && settingsTocRowFocus)"
            },
            {
                "key": "left",
                "command": "settings.action.focusTOC",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor && settingRowFocus)"
            },
            {
                "key": "shift+f9",
                "command": "settings.action.showContextMenu",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSettingsEditor)"
            },
            {
                "key": "ctrl+; ctrl+x",
                "command": "testing.cancelRun",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+shift+a",
                "command": "testing.coverageAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+shift+c",
                "command": "testing.coverageAtCursor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+f",
                "command": "testing.coverageCurrentFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+shift+l",
                "command": "testing.coverageLastRun",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+a",
                "command": "testing.debugAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+c",
                "command": "testing.debugAtCursor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+f",
                "command": "testing.debugCurrentFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+e",
                "command": "testing.debugFailTests",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+l",
                "command": "testing.debugLastRun",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+m",
                "command": "testing.openOutputPeek",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; e",
                "command": "testing.reRunFailTests",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; l",
                "command": "testing.reRunLastRun",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+r",
                "command": "testing.refreshTests",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (testing.canRefresh)"
            },
            {
                "key": "ctrl+; a",
                "command": "testing.runAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; c",
                "command": "testing.runAtCursor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; f",
                "command": "testing.runCurrentFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus)"
            },
            {
                "key": "ctrl+; ctrl+o",
                "command": "testing.showMostRecentOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (testing.hasAnyResults)"
            },
            {
                "key": "ctrl+; ctrl+shift+i",
                "command": "testing.toggleInlineCoverage",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+; ctrl+i",
                "command": "testing.toggleInlineTestOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+h",
                "command": "testing.toggleTestingPeekHistory",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (testing.isPeekVisible)"
            },
            {
                "key": "alt+c",
                "command": "toggleSearchCaseSensitive",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+c",
                "command": "toggleSearchEditorCaseSensitive",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+l",
                "command": "toggleSearchEditorContextLines",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor)"
            },
            {
                "key": "alt+r",
                "command": "toggleSearchEditorRegex",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleSearchEditorWholeWord",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor && searchInputBoxFocus)"
            },
            {
                "key": "alt+p",
                "command": "toggleSearchPreserveCase",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+r",
                "command": "toggleSearchRegex",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (searchViewletFocus)"
            },
            {
                "key": "alt+w",
                "command": "toggleSearchWholeWord",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+win+n",
                "command": "welcome.showNewFileEntries",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+down",
                "command": "widgetNavigation.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom')"
            },
            {
                "key": "ctrl+up",
                "command": "widgetNavigation.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top')"
            },
            {
                "key": "ctrl+alt+/",
                "command": "workbench.action.chat.attach.instructions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+backspace",
                "command": "workbench.action.chat.cancel",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "enter",
                "command": "workbench.action.chat.editRequests",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && !inChatInput && !quickChatHasFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.chat.focusInput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && quickChatHasFocus && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.holdToVoiceChatInChatView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inSettingsEditor && !inlineChatFocused && !notebookEditorFocused && !searchViewletFocus)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "workbench.action.chat.nextCodeBlock",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+f9",
                "command": "workbench.action.chat.nextFileTree",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "workbench.action.chat.open",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "workbench.action.chat.openAgent",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden)"
            },
            {
                "key": "ctrl+alt+.",
                "command": "workbench.action.chat.openModelPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChatInput)"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "workbench.action.chat.previousCodeBlock",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+shift+f9",
                "command": "workbench.action.chat.previousFileTree",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "delete",
                "command": "workbench.action.chat.restoreCheckpoint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+alt+win+/",
                "command": "workbench.action.chat.run-in-new-chat.prompt.current",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "alt+win+/",
                "command": "workbench.action.chat.run.prompt",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && config.chat.promptFiles)"
            },
            {
                "key": "alt+win+/",
                "command": "workbench.action.chat.run.prompt.current",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && config.chat.promptFiles && editorTextFocus && resourceSet && resourceLangId == 'prompt')"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "workbench.action.chat.sendToNewChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatPromptFileAttached && chatRequestIsPaused && inChatInput || chatPromptFileAttached && inChatInput && !chatSessionRequestInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.startVoiceChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.chat.stopListeningAndSubmit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "delete",
                "command": "workbench.action.chat.undoEdits",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inChat && !textInputFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+f4",
                "command": "workbench.action.closeActiveEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+w",
                "command": "workbench.action.closeAllEditors",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+shift+w",
                "command": "workbench.action.closeAllGroups",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k w",
                "command": "workbench.action.closeEditorsInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k f",
                "command": "workbench.action.closeFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (emptyWorkspaceSupport && workbenchState != 'empty')"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "ctrl+f4",
                "command": "workbench.action.closeGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorGroupEmpty && multipleEditorGroups)"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen)"
            },
            {
                "key": "escape",
                "command": "workbench.action.closeQuickOpen",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+k u",
                "command": "workbench.action.closeUnmodifiedEditors",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+w",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+f4",
                "command": "workbench.action.closeWindow",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+f5",
                "command": "workbench.action.compareEditor.nextChange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k shift+o",
                "command": "workbench.action.compareEditor.openSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDiffEditor)"
            },
            {
                "key": "shift+alt+f5",
                "command": "workbench.action.compareEditor.previousChange",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (textCompareEditorVisible)"
            },
            {
                "key": "ctrl+k o",
                "command": "workbench.action.copyEditorToNewWindow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditor)"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.disconnect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedSessionIsAttach && inDebugMode)"
            },
            {
                "key": "ctrl+shift+f5",
                "command": "workbench.action.debug.restart",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugMode)"
            },
            {
                "key": "ctrl+f5",
                "command": "workbench.action.debug.run",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debuggersAvailable && debugState != 'initializing')"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debuggersAvailable && debugState == 'inactive')"
            },
            {
                "key": "ctrl+f11",
                "command": "workbench.action.debug.stepIntoTarget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugMode && stepIntoTargetsSupported && debugState == 'stopped')"
            },
            {
                "key": "shift+f11",
                "command": "workbench.action.debug.stepOut",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f10",
                "command": "workbench.action.debug.stepOver",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "shift+f5",
                "command": "workbench.action.debug.stop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugMode && !focusedSessionIsAttach)"
            },
            {
                "key": "ctrl+k m",
                "command": "workbench.action.editor.changeLanguageMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!notebookEditorFocused)"
            },
            {
                "key": "alt+`",
                "command": "workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+alt+v",
                "command": "workbench.action.editorDictation.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (hasSpeechProvider && !editorReadonly && !speechToTextInProgress)"
            },
            {
                "key": "ctrl+k p",
                "command": "workbench.action.files.copyPathOfActiveFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.files.newUntitledFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (true)"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFileFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isMacNative && openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "workbench.action.files.openFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (openFolderWorkspaceSupport)"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openFolderViaWorkspace",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!openFolderWorkspaceSupport && workbenchState == 'workspace')"
            },
            {
                "key": "ctrl+o",
                "command": "workbench.action.files.openLocalFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "workbench.action.files.openLocalFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k r",
                "command": "workbench.action.files.revealActiveFileInWindows",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+s",
                "command": "workbench.action.files.save",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+s",
                "command": "workbench.action.files.saveAs",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+s",
                "command": "workbench.action.files.saveLocalFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (remoteFileDialogVisible)"
            },
            {
                "key": "ctrl+k ctrl+shift+s",
                "command": "workbench.action.files.saveWithoutFormatting",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.action.findInFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+up",
                "command": "workbench.action.focusAboveGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+down",
                "command": "workbench.action.focusBelowGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+8",
                "command": "workbench.action.focusEighthEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+5",
                "command": "workbench.action.focusFifthEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+1",
                "command": "workbench.action.focusFirstEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+4",
                "command": "workbench.action.focusFourthEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "workbench.action.focusLeftGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "f6",
                "command": "workbench.action.focusNextPart",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+f6",
                "command": "workbench.action.focusPreviousPart",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "workbench.action.focusRightGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+2",
                "command": "workbench.action.focusSecondEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+7",
                "command": "workbench.action.focusSeventhEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+0",
                "command": "workbench.action.focusSideBar",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+6",
                "command": "workbench.action.focusSixthEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+3",
                "command": "workbench.action.focusThirdEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.gotoLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+o",
                "command": "workbench.action.gotoSymbol",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!accessibilityHelpIsShown && !accessibleViewIsShown)"
            },
            {
                "key": "down",
                "command": "workbench.action.interactivePlayground.arrowDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "up",
                "command": "workbench.action.interactivePlayground.arrowUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.interactivePlayground.pageDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.interactivePlayground.pageUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (interactivePlaygroundFocus && !editorTextFocus)"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "workbench.action.joinEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (sideBySideEditorActive)"
            },
            {
                "key": "ctrl+k enter",
                "command": "workbench.action.keepEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "workbench.action.keybindingsReference",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+9",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+0",
                "command": "workbench.action.lastEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k down",
                "command": "workbench.action.moveActiveEditorGroupDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k left",
                "command": "workbench.action.moveActiveEditorGroupLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k right",
                "command": "workbench.action.moveActiveEditorGroupRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k up",
                "command": "workbench.action.moveActiveEditorGroupUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+pageup",
                "command": "workbench.action.moveEditorLeftInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+pagedown",
                "command": "workbench.action.moveEditorRightInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+alt+1",
                "command": "workbench.action.moveEditorToFirstGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+alt+9",
                "command": "workbench.action.moveEditorToLastGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+alt+right",
                "command": "workbench.action.moveEditorToNextGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+alt+left",
                "command": "workbench.action.moveEditorToPreviousGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "browserback",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (canNavigateBack)"
            },
            {
                "key": "alt+left",
                "command": "workbench.action.navigateBack",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (canNavigateBack)"
            },
            {
                "key": "browserforward",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (canNavigateForward)"
            },
            {
                "key": "alt+right",
                "command": "workbench.action.navigateForward",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (canNavigateForward)"
            },
            {
                "key": "ctrl+k ctrl+q",
                "command": "workbench.action.navigateToLastEditLocation",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+n",
                "command": "workbench.action.newWindow",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.nextEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+pagedown",
                "command": "workbench.action.nextEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+1",
                "command": "workbench.action.openEditorAtIndex1",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+2",
                "command": "workbench.action.openEditorAtIndex2",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+3",
                "command": "workbench.action.openEditorAtIndex3",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+4",
                "command": "workbench.action.openEditorAtIndex4",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+5",
                "command": "workbench.action.openEditorAtIndex5",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+6",
                "command": "workbench.action.openEditorAtIndex6",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+7",
                "command": "workbench.action.openEditorAtIndex7",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+8",
                "command": "workbench.action.openEditorAtIndex8",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "alt+9",
                "command": "workbench.action.openEditorAtIndex9",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+s",
                "command": "workbench.action.openGlobalKeybindings",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.openRecent",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+,",
                "command": "workbench.action.openSettings",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+u",
                "command": "workbench.action.output.toggleOutput",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.panel.output.active)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.pinEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!activeEditorIsPinned)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.previousEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+pageup",
                "command": "workbench.action.previousEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+e",
                "command": "workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpen",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!activeEditorGroupEmpty)"
            },
            {
                "key": "ctrl+q",
                "command": "workbench.action.quickOpenView",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+alt+l",
                "command": "workbench.action.quickchat.toggle",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled)"
            },
            {
                "key": "ctrl+alt+o",
                "command": "workbench.action.remote.showMenu",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+t",
                "command": "workbench.action.reopenClosedEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+h",
                "command": "workbench.action.replaceInFiles",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+j",
                "command": "workbench.action.search.toggleQueryDetails",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inSearchEditor || searchViewletFocus)"
            },
            {
                "key": "ctrl+k ctrl+t",
                "command": "workbench.action.selectTheme",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+p",
                "command": "workbench.action.showAllEditors",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+t",
                "command": "workbench.action.showAllSymbols",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "f1",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+p",
                "command": "workbench.action.showCommands",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+\\",
                "command": "workbench.action.splitEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+shift+\\",
                "command": "workbench.action.splitEditorInGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorCanSplitInGroup)"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorOrthogonal",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k ctrl+\\",
                "command": "workbench.action.splitEditorUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+b",
                "command": "workbench.action.tasks.build",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (taskCommandsRegistered)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.tasks.rerunForActiveTerminal",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (taskTerminalActive && terminalFocus)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.chat.close",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatFocus && terminalChatVisible || chatIsEnabled && terminalChatVisible && terminalFocus)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "alt+enter",
                "command": "workbench.action.terminal.chat.insertFirstCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.terminal.chat.rerunRequest",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.terminal.chat.runCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || chatIsEnabled && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.terminal.chat.runFirstCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.clearSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible)"
            },
            {
                "key": "ctrl+shift+,",
                "command": "workbench.action.terminal.configureSuggestSettings",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+c",
                "command": "workbench.action.terminal.copyAndClearSelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "workbench.action.terminal.copySelection",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused)"
            },
            {
                "key": "f3",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.findNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "shift+f3",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.findPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported)"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.terminal.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "alt+f2",
                "command": "workbench.action.terminal.focusAccessibleBuffer",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f",
                "command": "workbench.action.terminal.focusFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "workbench.action.terminal.focusHover",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.terminal.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.terminal.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
            },
            {
                "key": "ctrl+shift+\\",
                "command": "workbench.action.terminal.focusTabs",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.terminal.goToRecentDirectory",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "shift+escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideFind",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "delete",
                "command": "workbench.action.terminal.killActiveTab",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+w",
                "command": "workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+f4",
                "command": "workbench.action.terminal.killEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+`",
                "command": "workbench.action.terminal.new",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+c",
                "command": "workbench.action.terminal.openNativeConsole",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!terminalFocus)"
            },
            {
                "key": "ctrl+shift+v",
                "command": "workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+v",
                "command": "workbench.action.terminal.paste",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "f2",
                "command": "workbench.action.terminal.renameActiveTab",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.runRecentCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "workbench.action.terminal.scrollDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pagedown",
                "command": "workbench.action.terminal.scrollDownPage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+end",
                "command": "workbench.action.terminal.scrollToBottom",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+end",
                "command": "workbench.action.terminal.scrollToBottomAccessibleView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+down",
                "command": "workbench.action.terminal.scrollToNextCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+up",
                "command": "workbench.action.terminal.scrollToPreviousCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled)"
            },
            {
                "key": "ctrl+home",
                "command": "workbench.action.terminal.scrollToTop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+home",
                "command": "workbench.action.terminal.scrollToTopAccessibleView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "workbench.action.terminal.scrollUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "shift+pageup",
                "command": "workbench.action.terminal.scrollUpPage",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive)"
            },
            {
                "key": "ctrl+shift+down",
                "command": "workbench.action.terminal.selectToNextCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+up",
                "command": "workbench.action.terminal.selectToPreviousCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported)"
            },
            {
                "key": "ctrl+v",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u0016"
                }
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~a"
                }
            },
            {
                "key": "alt+space",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~b"
                }
            },
            {
                "key": "shift+enter",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh')",
                "args": {
                    "text": "\u001b[24~c"
                }
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5A"
                }
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5B"
                }
            },
            {
                "key": "alt+right",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5C"
                }
            },
            {
                "key": "alt+left",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001b[1;5D"
                }
            },
            {
                "key": "ctrl+alt+r",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && terminalFocus)",
                "args": {
                    "text": "\u0012"
                }
            },
            {
                "key": "ctrl+alt+g",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0007"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0017"
                }
            },
            {
                "key": "ctrl+backspace",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalShellType == 'cmd')",
                "args": {
                    "text": "\b"
                }
            },
            {
                "key": "ctrl+delete",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001bd"
                }
            },
            {
                "key": "ctrl+shift+2",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u0000"
                }
            },
            {
                "key": "ctrl+shift+6",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001e"
                }
            },
            {
                "key": "ctrl+/",
                "command": "workbench.action.terminal.sendSequence",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)",
                "args": {
                    "text": "\u001f"
                }
            },
            {
                "key": "ctrl+.",
                "command": "workbench.action.terminal.showQuickFixes",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus)"
            },
            {
                "key": "alt+z",
                "command": "workbench.action.terminal.sizeToContentWidth",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.split",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile)"
            },
            {
                "key": "ctrl+shift+5",
                "command": "workbench.action.terminal.splitActiveTab",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalProcessSupported && terminalTabsFocus)"
            },
            {
                "key": "ctrl+alt+space",
                "command": "workbench.action.terminal.suggestToggleDetailsFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!textInputFocus)"
            },
            {
                "key": "alt+c",
                "command": "workbench.action.terminal.toggleFindCaseSensitive",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+r",
                "command": "workbench.action.terminal.toggleFindRegex",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "alt+w",
                "command": "workbench.action.terminal.toggleFindWholeWord",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported)"
            },
            {
                "key": "ctrl+`",
                "command": "workbench.action.terminal.toggleTerminal",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminal.active)"
            },
            {
                "key": "ctrl+alt+b",
                "command": "workbench.action.toggleAuxiliaryBar",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "shift+alt+0",
                "command": "workbench.action.toggleEditorGroupLayout",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "f11",
                "command": "workbench.action.toggleFullScreen",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!isIOS)"
            },
            {
                "key": "ctrl+k ctrl+m",
                "command": "workbench.action.toggleMaximizeEditorGroup",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
            },
            {
                "key": "ctrl+j",
                "command": "workbench.action.togglePanel",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+b",
                "command": "workbench.action.toggleSidebarVisibility",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k z",
                "command": "workbench.action.toggleZenMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!isAuxiliaryWindowFocusedContext)"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.unpinEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (activeEditorIsPinned)"
            },
            {
                "key": "ctrl+numpad_add",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+=",
                "command": "workbench.action.zoomIn",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+numpad_subtract",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+-",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+-",
                "command": "workbench.action.zoomOut",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+numpad0",
                "command": "workbench.action.zoomReset",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+shift+m",
                "command": "workbench.actions.view.problems",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.panel.markers.view.active)"
            },
            {
                "key": "escape",
                "command": "workbench.banner.focusBanner",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (bannerFocused)"
            },
            {
                "key": "down",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (bannerFocused)"
            },
            {
                "key": "right",
                "command": "workbench.banner.focusNextAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (bannerFocused)"
            },
            {
                "key": "up",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (bannerFocused)"
            },
            {
                "key": "left",
                "command": "workbench.banner.focusPreviousAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (bannerFocused)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "workbench.debug.action.toggleRepl",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.panel.repl.view.active)"
            },
            {
                "key": "ctrl+c",
                "command": "workbench.debug.viewlet.action.copyValue",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView')"
            },
            {
                "key": "ctrl+k c",
                "command": "workbench.files.action.compareWithClipboard",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k d",
                "command": "workbench.files.action.compareWithSaved",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "ctrl+k e",
                "command": "workbench.files.action.focusOpenEditorsView",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.explorer.openEditorsView.active)"
            },
            {
                "key": "ctrl+alt+i",
                "command": "workbench.panel.chat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.panel.chat.view.copilot.active)"
            },
            {
                "key": "escape",
                "command": "workbench.statusBar.clearFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "home",
                "command": "workbench.statusBar.focusFirst",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "end",
                "command": "workbench.statusBar.focusLast",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "down",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "right",
                "command": "workbench.statusBar.focusNext",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "up",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "left",
                "command": "workbench.statusBar.focusPrevious",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (statusBarFocused)"
            },
            {
                "key": "ctrl+shift+d",
                "command": "workbench.view.debug",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (viewContainer.workbench.view.debug.enabled)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "workbench.view.explorer",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (viewContainer.workbench.view.explorer.enabled)"
            },
            {
                "key": "ctrl+shift+x",
                "command": "workbench.view.extensions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (viewContainer.workbench.view.extensions.enabled)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "workbench.view.scm",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.scm.active)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.view.search",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (workbench.view.search.active && neverMatch =~ /doesNotMatch/)"
            },
            {
                "key": "ctrl+right",
                "command": "breadcrumbs.focusNextWithPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "ctrl+left",
                "command": "breadcrumbs.focusPreviousWithPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "breadcrumbs.selectEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breadcrumbsActive && breadcrumbsVisible)"
            },
            {
                "key": "ctrl+y",
                "command": "chatEditor.action.acceptHunk",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+n",
                "command": "chatEditor.action.undoHunk",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookCellListFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.jump",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible)"
            },
            {
                "key": "ctrl+i",
                "command": "inlineChat.startWithCurrentLine",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible)"
            },
            {
                "key": "f3",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "ctrl+alt+f",
                "command": "list.find.replInputFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (view == 'workbench.panel.repl.view')"
            },
            {
                "key": "down",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "up",
                "command": "notebook.cell.nullAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookOutputInputFocused)"
            },
            {
                "key": "ctrl+a",
                "command": "notebook.cell.output.selectAll",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "notebook.focusNextEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+pageup",
                "command": "notebook.focusPreviousEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityModeEnabled && notebookCellEditorFocused)"
            },
            {
                "key": "ctrl+/",
                "command": "terminalSuggestToggleExplainMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+k down",
                "command": "views.moveViewDown",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k left",
                "command": "views.moveViewLeft",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k right",
                "command": "views.moveViewRight",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+k up",
                "command": "views.moveViewUp",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (focusedView != '')"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.acceptTool",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatHasToolConfirmation && inChat)"
            },
            {
                "key": "ctrl+l",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.chat.newChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat)"
            },
            {
                "key": "ctrl+pagedown",
                "command": "workbench.action.debug.nextConsole",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugRepl)"
            },
            {
                "key": "ctrl+pageup",
                "command": "workbench.action.debug.prevConsole",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inDebugRepl)"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.openChat",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && inChat && inChatEditor)"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial' || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetFirstSuggestionFocused || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.selectionMode != 'partial')"
            },
            {
                "key": "enter",
                "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'never')"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+right",
                "command": "workbench.action.terminal.focusNextPane",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "alt+left",
                "command": "workbench.action.terminal.focusPreviousPane",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalSplitPaneActive || terminalFocus && terminalProcessSupported && terminalSplitPaneActive)"
            },
            {
                "key": "escape",
                "command": "workbench.action.terminal.hideSuggestWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated)"
            },
            {
                "key": "ctrl+shift+g",
                "command": "workbench.action.terminal.openDetectedLink",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.requestCompletions",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible)"
            },
            {
                "key": "pagedown",
                "command": "workbench.action.terminal.selectNextPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "down",
                "command": "workbench.action.terminal.selectNextSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "pageup",
                "command": "workbench.action.terminal.selectPrevPageSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.selectPrevSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (simpleSuggestWidgetHasNavigated && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasNavigated && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible || terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !config.terminal.integrated.suggest.upArrowNavigatesHistory)"
            },
            {
                "key": "ctrl+shift+l",
                "command": "workbench.action.terminal.suggestLearnMore",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "tab",
                "command": "editor.action.inlineSuggest.commit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inInlineEditsPreviewEditor)"
            },
            {
                "key": "f6",
                "command": "workbench.action.debug.pause",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debugState == 'running')"
            },
            {
                "key": "tab",
                "command": "workbench.action.terminal.acceptSelectedSuggestion",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "alt+down",
                "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "alt+up",
                "command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal')"
            },
            {
                "key": "up",
                "command": "workbench.action.terminal.hideSuggestWidgetAndNavigateHistory",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated || config.terminal.integrated.suggest.upArrowNavigatesHistory && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && !simpleSuggestWidgetHasNavigated)"
            },
            {
                "key": "f2",
                "command": "debug.renameWatchExpression",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (watchExpressionsFocused)"
            },
            {
                "key": "f2",
                "command": "debug.setVariable",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (variablesFocused)"
            },
            {
                "key": "space",
                "command": "debug.toggleBreakpoint",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (breakpointsFocused && !inputFocus)"
            },
            {
                "key": "ctrl+up",
                "command": "interactive.history.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none')"
            },
            {
                "key": "escape",
                "command": "notebook.cell.quitEdit",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notebookEditorFocused && notebookOutputFocused)"
            },
            {
                "key": "alt+home alt+home",
                "command": "repl.input.focus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (mostRecentReplEditor)"
            },
            {
                "key": "ctrl+v",
                "command": "filesExplorer.paste",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "chatEditor.action.accept",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+alt+y",
                "command": "chatEditor.action.acceptAllEdits",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "chatEditor.action.reject",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && notebookEditorFocused && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "shift+delete",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "deleteFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus)"
            },
            {
                "key": "ctrl+shift+.",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+shift+o",
                "command": "editor.action.accessibleViewGoToSymbol",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown)"
            },
            {
                "key": "ctrl+e",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibilityHelpIsShown)"
            },
            {
                "key": "shift+alt+f1",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "config.vscode-default-keybindings.windowsKeybindings"
            },
            {
                "key": "escape",
                "command": "editor.closeCallHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (callHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "escape",
                "command": "editor.closeTypeHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (typeHierarchyVisible && !config.editor.stablePeek)"
            },
            {
                "key": "enter",
                "command": "explorer.openAndPassFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "filesExplorer.cancelCut",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "filesExplorer.copy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus)"
            },
            {
                "key": "ctrl+x",
                "command": "filesExplorer.cut",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "space",
                "command": "filesExplorer.openFilePreserveFocus",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus)"
            },
            {
                "key": "home",
                "command": "firstCompressedFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "ctrl+enter",
                "command": "inlineChat.acceptChanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasProvider && inlineChatVisible)"
            },
            {
                "key": "ctrl+shift+y",
                "command": "inlineChat2.keep",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "ctrl+shift+n",
                "command": "inlineChat2.undo",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress)"
            },
            {
                "key": "end",
                "command": "lastCompressedFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "ctrl+shift+t",
                "command": "mergeEditor.toggleBetweenInputs",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isMergeEditor)"
            },
            {
                "key": "delete",
                "command": "moveFileToTrash",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus)"
            },
            {
                "key": "right",
                "command": "nextCompressedFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus)"
            },
            {
                "key": "left",
                "command": "previousCompressedFolder",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus)"
            },
            {
                "key": "delete",
                "command": "remote.tunnel.closeInline",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (tunnelCloseable && tunnelViewFocus)"
            },
            {
                "key": "ctrl+c",
                "command": "remote.tunnel.copyAddressInline",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "remote.tunnel.label",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined')"
            },
            {
                "key": "f2",
                "command": "renameFile",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus)"
            },
            {
                "key": "f5",
                "command": "workbench.action.debug.continue",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debugState == 'stopped')"
            },
            {
                "key": "f11",
                "command": "workbench.action.debug.stepInto",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (debugState != 'inactive')"
            },
            {
                "key": "shift+escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "escape",
                "command": "closeReferenceSearch",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus)"
            },
            {
                "key": "left",
                "command": "list.stickyScroll.collapse",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "enter",
                "command": "list.stickyScrollselect",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "space",
                "command": "list.stickyScrolltoggleExpand",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (treestickyScrollFocused)"
            },
            {
                "key": "escape",
                "command": "notifications.hideList",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationCenterVisible)"
            },
            {
                "key": "ctrl+alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "ctrl+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "right",
                "command": "quickInput.acceptInBackground",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick')"
            },
            {
                "key": "alt+left",
                "command": "workbench.action.quickInputBack",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen)"
            },
            {
                "key": "ctrl+tab",
                "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+e",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+q",
                "command": "workbench.action.quickOpenNavigateNextInViewPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inEditorsPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+e",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+p",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inFilesPicker && inQuickOpen)"
            },
            {
                "key": "ctrl+shift+r",
                "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen && inRecentFilesPicker)"
            },
            {
                "key": "ctrl+shift+q",
                "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (inQuickOpen && inViewsPicker)"
            },
            {
                "key": "ctrl+r",
                "command": "workbench.action.reloadWindow",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isDevelopment)"
            },
            {
                "key": "ctrl+shift+f",
                "command": "workbench.action.terminal.searchWorkspace",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (terminalFocus && terminalProcessSupported && terminalTextSelected)"
            },
            {
                "key": "ctrl+shift+i",
                "command": "workbench.action.toggleDevTools",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (isDevelopment)"
            },
            {
                "key": "escape",
                "command": "notifications.hideToasts",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (notificationFocus && notificationToastsVisible)"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopListening",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view')"
            },
            {
                "key": "escape",
                "command": "workbench.action.chat.stopReadChatItemAloud",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scopedChatSynthesisInProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.editorDictation.stop",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorDictation.inProgress)"
            },
            {
                "key": "escape",
                "command": "workbench.action.speech.stopReadAloud",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (scopedChatSynthesisInProgress && textToSpeechInProgress)"
            },
            {
                "key": "f10",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+alt+s",
                "command": "git.stageSelectedRanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "ctrl+shift+v",
                "command": "markdown.showPreview",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "shift+alt+f12",
                "command": "references-view.findReferences",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasReferenceProvider)"
            },
            {
                "key": "f11",
                "command": "extension.node-debug.startWithStopOnEntry",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node')"
            },
            {
                "key": "ctrl+k ctrl+n",
                "command": "git.unstageSelectedRanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git')"
            },
            {
                "key": "ctrl+k v",
                "command": "markdown.showPreviewToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (!notebookEditorFocused && editorLangId == 'markdown')"
            },
            {
                "key": "f4",
                "command": "references-view.next",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "git.revertSelectedRanges",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorTextFocus && !operationInProgress && resourceScheme == 'file')"
            },
            {
                "key": "shift+f4",
                "command": "references-view.prev",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (reference-list.hasResult && references-view.canNavigate)"
            },
            {
                "key": "shift+alt+h",
                "command": "references-view.showCallHierarchy",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (editorHasCallHierarchyProvider)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.applyInEditor",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.chat.insertCodeBlock",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.terminal.chat.start",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported)"
            },
            {
                "key": "ctrl+enter",
                "command": "chat.inlineResourceAnchor.openToSide",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (chatAttachmentResource)"
            },
            {
                "key": "ctrl+i",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+space",
                "command": "workbench.action.terminal.suggestToggleDetails",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible)"
            },
            {
                "key": "ctrl+.",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "enter",
                "command": "acceptSelectedCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "shift+escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "hideCodeActionWidget",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+enter",
                "command": "previewSelectedCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "down",
                "command": "selectNextCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "ctrl+up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "up",
                "command": "selectPrevCodeAction",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (codeActionMenuVisible)"
            },
            {
                "key": "escape",
                "command": "diffEditor.exitCompareMove",
                "when": "config.vscode-default-keybindings.windowsKeybindings && (comparingMovedCode)"
            }
        ]
    }
}
